{"version":3,"file":"applicationinsights-properties-js.min.js","sources":["../../../tools/shims/dist-esm/Constants.js","../../../tools/shims/dist-esm/Helpers.js","../../../tools/shims/dist-esm/TsLibShims.js","../../../common/temp/node_modules/@microsoft/dynamicproto-js/lib/dist/esm/dynamicproto-js.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/HelperFuncs.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/EnvUtils.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/DbgExtensionUtils.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/DiagnosticLogger.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/PerfManager.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/TelemetryPluginChain.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/ProcessTelemetryContext.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/BaseTelemetryPlugin.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/Constants.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/CookieMgr.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/RandomHelper.js","../../../shared/AppInsightsCommon/dist-esm/Enums.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataSanitizer.js","../../../shared/AppInsightsCommon/dist-esm/StorageHelperFuncs.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/EventData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageView.js","../../../shared/AppInsightsCommon/dist-esm/HelperFuncs.js","../../../shared/AppInsightsCommon/dist-esm/Constants.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/PartAExtensions.js","../dist-esm/Context/Session.js","../dist-esm/Context/Application.js","../dist-esm/Context/Device.js","../dist-esm/Context/Internal.js","../dist-esm/Context/User.js","../dist-esm/Context/Location.js","../dist-esm/Context/TelemetryTrace.js","../dist-esm/TelemetryContext.js","../dist-esm/PropertiesPlugin.js","../../../shared/AppInsightsCommon/dist-esm/applicationinsights-common.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var strShimFunction = \"function\";\r\nexport var strShimObject = \"object\";\r\nexport var strShimUndefined = \"undefined\";\r\nexport var strShimPrototype = \"prototype\";\r\nexport var strShimHasOwnProperty = \"hasOwnProperty\";\r\nexport var strDefault = \"default\";\r\nexport var ObjClass = Object;\r\nexport var ObjProto = ObjClass[strShimPrototype];\r\nexport var ObjAssign = ObjClass[\"assign\"];\r\nexport var ObjCreate = ObjClass[\"create\"];\r\nexport var ObjDefineProperty = ObjClass[\"defineProperty\"];\r\nexport var ObjHasOwnProperty = ObjProto[strShimHasOwnProperty];\r\n//# sourceMappingURL=Constants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { ObjCreate, strShimFunction, strShimObject, strShimPrototype, strShimUndefined } from \"./Constants\";\r\n/**\r\n * Returns the current global scope object, for a normal web page this will be the current\r\n * window, for a Web Worker this will be current worker global scope via \"self\". The internal\r\n * implementation returns the first available instance object in the following order\r\n * - globalThis (New standard)\r\n * - self (Will return the current window instance for supported browsers)\r\n * - window (fallback for older browser implementations)\r\n * - global (NodeJS standard)\r\n * - <null> (When all else fails)\r\n * While the return type is a Window for the normal case, not all environments will support all\r\n * of the properties or functions.\r\n */\r\nexport function getGlobal() {\r\n    if (typeof globalThis !== strShimUndefined && globalThis) {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== strShimUndefined && self) {\r\n        return self;\r\n    }\r\n    if (typeof window !== strShimUndefined && window) {\r\n        return window;\r\n    }\r\n    if (typeof global !== strShimUndefined && global) {\r\n        return global;\r\n    }\r\n    return null;\r\n}\r\nexport function throwTypeError(message) {\r\n    throw new TypeError(message);\r\n}\r\n/**\r\n * Creates an object that has the specified prototype, and that optionally contains specified properties. This helper exists to avoid adding a polyfil\r\n * for older browsers that do not define Object.create eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n * Note: For consistency this will not use the Object.create implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n * @param obj Object to use as a prototype. May be null\r\n */\r\nexport function objCreateFn(obj) {\r\n    var func = ObjCreate;\r\n    // Use build in Object.create\r\n    if (func) {\r\n        // Use Object create method if it exists\r\n        return func(obj);\r\n    }\r\n    if (obj == null) {\r\n        return {};\r\n    }\r\n    var type = typeof obj;\r\n    if (type !== strShimObject && type !== strShimFunction) {\r\n        throwTypeError(\"Object prototype may only be an Object:\" + obj);\r\n    }\r\n    function tmpFunc() { }\r\n    tmpFunc[strShimPrototype] = obj;\r\n    return new tmpFunc();\r\n}\r\n//# sourceMappingURL=Helpers.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { ObjAssign, ObjClass, ObjCreate, ObjDefineProperty, ObjHasOwnProperty, ObjProto, strDefault, strShimFunction, strShimHasOwnProperty, strShimPrototype } from \"./Constants\";\r\nimport { getGlobal, objCreateFn, throwTypeError } from \"./Helpers\";\r\n// Most of these functions have been directly shamelessly \"lifted\" from the https://github.com/@microsoft/tslib and\r\n// modified to be ES3 compatible and applying several minification and tree-shaking techniques so that Application Insights\r\n// can successfully use TypeScript \"importHelpers\" which imports tslib during compilation but it will use these at runtime\r\n// Which is also why all of the functions have not been included as Application Insights currently doesn't use or require\r\n// them.\r\nexport var SymbolObj = (getGlobal() || {})[\"Symbol\"];\r\nexport var ReflectObj = (getGlobal() || {})[\"Reflect\"];\r\nexport var __hasSymbol = !!SymbolObj;\r\nexport var __hasReflect = !!ReflectObj;\r\nvar strDecorate = \"decorate\";\r\nvar strMetadata = \"metadata\";\r\nvar strGetOwnPropertySymbols = \"getOwnPropertySymbols\";\r\nvar strIterator = \"iterator\";\r\nexport var __objAssignFnImpl = function (t) {\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) {\r\n            if (ObjProto[strShimHasOwnProperty].call(s, p)) {\r\n                t[p] = s[p];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nexport var __assignFn = ObjAssign || __objAssignFnImpl;\r\n// tslint:disable-next-line: only-arrow-functions\r\nvar extendStaticsFn = function (d, b) {\r\n    extendStaticsFn = ObjClass[\"setPrototypeOf\"] ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        function (d, b) {\r\n            for (var p in b) {\r\n                if (b[strShimHasOwnProperty](p)) {\r\n                    d[p] = b[p];\r\n                }\r\n            }\r\n        };\r\n    return extendStaticsFn(d, b);\r\n};\r\nexport function __extendsFn(d, b) {\r\n    if (typeof b !== strShimFunction && b !== null) {\r\n        throwTypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    }\r\n    extendStaticsFn(d, b);\r\n    function __() { this.constructor = d; }\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    d[strShimPrototype] = b === null ? objCreateFn(b) : (__[strShimPrototype] = b[strShimPrototype], new __());\r\n}\r\nexport function __restFn(s, e) {\r\n    var t = {};\r\n    for (var k in s) {\r\n        if (ObjHasOwnProperty.call(s, k) && e.indexOf(k) < 0) {\r\n            t[k] = s[k];\r\n        }\r\n    }\r\n    if (s != null && typeof ObjClass[strGetOwnPropertySymbols] === strShimFunction) {\r\n        for (var i = 0, p = ObjClass[strGetOwnPropertySymbols](s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && ObjProto[\"propertyIsEnumerable\"].call(s, p[i])) {\r\n                t[p[i]] = s[p[i]];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n}\r\nexport function __decorateFn(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = ObjClass[\"getOwnPropertyDescriptor\"](target, key) : desc, d;\r\n    if (__hasReflect && typeof ReflectObj[strDecorate] === strShimFunction) {\r\n        r = ReflectObj[strDecorate](decorators, target, key, desc);\r\n    }\r\n    else {\r\n        for (var i = decorators.length - 1; i >= 0; i--) {\r\n            // eslint-disable-next-line no-cond-assign\r\n            if (d = decorators[i]) {\r\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n            }\r\n        }\r\n    }\r\n    // tslint:disable-next-line:ban-comma-operator\r\n    return c > 3 && r && ObjDefineProperty(target, key, r), r;\r\n}\r\nexport function __paramFn(paramIndex, decorator) {\r\n    return function (target, key) {\r\n        decorator(target, key, paramIndex);\r\n    };\r\n}\r\nexport function __metadataFn(metadataKey, metadataValue) {\r\n    if (__hasReflect && ReflectObj[strMetadata] === strShimFunction) {\r\n        return ReflectObj[strMetadata](metadataKey, metadataValue);\r\n    }\r\n}\r\nexport function __exportStarFn(m, o) {\r\n    for (var p in m) {\r\n        if (p !== strDefault && !ObjHasOwnProperty.call(o, p)) {\r\n            __createBindingFn(o, m, p);\r\n        }\r\n    }\r\n}\r\nexport function __createBindingFn(o, m, k, k2) {\r\n    if (k2 === undefined) {\r\n        k2 = k;\r\n    }\r\n    if (ObjCreate) {\r\n        ObjDefineProperty(o, k2, {\r\n            enumerable: true,\r\n            get: function () {\r\n                return m[k];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        o[k2] = m[k];\r\n    }\r\n}\r\nexport function __valuesFn(o) {\r\n    var s = typeof SymbolObj === strShimFunction && SymbolObj[strIterator], m = s && o[s], i = 0;\r\n    if (m) {\r\n        return m.call(o);\r\n    }\r\n    if (o && typeof o.length === \"number\") {\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) {\r\n                    o = void 0;\r\n                }\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n    throwTypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\nexport function __readFn(o, n) {\r\n    var m = typeof SymbolObj === strShimFunction && o[SymbolObj[strIterator]];\r\n    if (!m) {\r\n        return o;\r\n    }\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\r\n            ar.push(r.value);\r\n        }\r\n    }\r\n    catch (error) {\r\n        e = {\r\n            error: error\r\n        };\r\n    }\r\n    finally {\r\n        try {\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            if (r && !r.done && (m = i[\"return\"])) {\r\n                m.call(i);\r\n            }\r\n        }\r\n        finally {\r\n            if (e) {\r\n                // eslint-disable-next-line no-unsafe-finally\r\n                throw e.error;\r\n            }\r\n        }\r\n    }\r\n    return ar;\r\n}\r\n/** @deprecated */\r\nexport function __spreadArraysFn() {\r\n    var theArgs = arguments;\r\n    // Calculate new total size\r\n    for (var s = 0, i = 0, il = theArgs.length; i < il; i++) {\r\n        s += theArgs[i].length;\r\n    }\r\n    // Create new full array\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++) {\r\n        for (var a = theArgs[i], j = 0, jl = a.length; j < jl; j++, k++) {\r\n            r[k] = a[j];\r\n        }\r\n    }\r\n    return r;\r\n}\r\nexport function __spreadArrayFn(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\r\n        to[j] = from[i];\r\n    }\r\n    return to;\r\n}\r\nexport function __makeTemplateObjectFn(cooked, raw) {\r\n    if (ObjDefineProperty) {\r\n        ObjDefineProperty(cooked, \"raw\", { value: raw });\r\n    }\r\n    else {\r\n        cooked.raw = raw;\r\n    }\r\n    return cooked;\r\n}\r\nexport function __importStarFn(mod) {\r\n    if (mod && mod.__esModule) {\r\n        return mod;\r\n    }\r\n    var result = {};\r\n    if (mod != null) {\r\n        for (var k in mod) {\r\n            if (k !== strDefault && Object.prototype.hasOwnProperty.call(mod, k)) {\r\n                __createBindingFn(result, mod, k);\r\n            }\r\n        }\r\n    }\r\n    // Set default module\r\n    if (ObjCreate) {\r\n        ObjDefineProperty(result, strDefault, { enumerable: true, value: mod });\r\n    }\r\n    else {\r\n        result[strDefault] = mod;\r\n    }\r\n    return result;\r\n}\r\nexport function __importDefaultFn(mod) {\r\n    return (mod && mod.__esModule) ? mod : { strDefault: mod };\r\n}\r\n//# sourceMappingURL=TsLibShims.js.map","/*!\n * Microsoft Dynamic Proto Utility, 1.1.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Constructor = 'constructor';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Prototype = 'prototype';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strFunction = 'function';\r\n/**\r\n * Used to define the name of the instance function lookup table\r\n * @ignore\r\n */\r\nvar DynInstFuncTable = '_dynInstFuncs';\r\n/**\r\n * Name used to tag the dynamic prototype function\r\n * @ignore\r\n */\r\nvar DynProxyTag = '_isDynProxy';\r\n/**\r\n * Name added to a prototype to define the dynamic prototype \"class\" name used to lookup the function table\r\n * @ignore\r\n */\r\nvar DynClassName = '_dynClass';\r\n/**\r\n * Prefix added to the classname to avoid any name clashes with other instance level properties\r\n * @ignore\r\n */\r\nvar DynClassNamePrefix = '_dynCls$';\r\n/**\r\n * A tag which is used to check if we have already to attempted to set the instance function if one is not present\r\n * @ignore\r\n */\r\nvar DynInstChkTag = '_dynInstChk';\r\n/**\r\n * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same\r\n * tag name as the function level but a different const name for readability only.\r\n */\r\nvar DynAllowInstChkTag = DynInstChkTag;\r\n/**\r\n * The global (imported) instances where the global performance options are stored\r\n */\r\nvar DynProtoDefaultOptions = '_dfOpts';\r\n/**\r\n * Value used as the name of a class when it cannot be determined\r\n * @ignore\r\n */\r\nvar UnknownValue = '_unknown_';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strUseBaseInst = 'useBaseInst';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strSetInstFuncs = 'setInstFuncs';\r\nvar Obj = Object;\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Obj[\"getPrototypeOf\"];\r\n/**\r\n * Internal Global used to generate a unique dynamic class name, every new class will increase this value\r\n * @ignore\r\n */\r\nvar _dynamicNames = 0;\r\n/**\r\n * Helper to check if the object contains a property of the name\r\n * @ignore\r\n */\r\nfunction _hasOwnProperty(obj, prop) {\r\n    return obj && Obj[Prototype].hasOwnProperty.call(obj, prop);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype or Array prototype\r\n * @ignore\r\n */\r\nfunction _isObjectOrArrayPrototype(target) {\r\n    return target && (target === Obj[Prototype] || target === Array[Prototype]);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype\r\n * @ignore\r\n */\r\nfunction _isObjectArrayOrFunctionPrototype(target) {\r\n    return _isObjectOrArrayPrototype(target) || target === Function[Prototype];\r\n}\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    if (target) {\r\n        // This method doesn't existing in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        // target[Constructor] May break if the constructor has been changed or removed\r\n        var newProto = target[str__Proto] || target[Prototype] || (target[Constructor] ? target[Constructor][Prototype] : null);\r\n        if (newProto) {\r\n            return newProto;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Helper to get the properties of an object, including none enumerable ones as functions on a prototype in ES6\r\n * are not enumerable.\r\n * @param target\r\n */\r\nfunction _forEachProp(target, func) {\r\n    var props = [];\r\n    var getOwnProps = Obj[\"getOwnPropertyNames\"];\r\n    if (getOwnProps) {\r\n        props = getOwnProps(target);\r\n    }\r\n    else {\r\n        for (var name_1 in target) {\r\n            if (typeof name_1 === \"string\" && _hasOwnProperty(target, name_1)) {\r\n                props.push(name_1);\r\n            }\r\n        }\r\n    }\r\n    if (props && props.length > 0) {\r\n        for (var lp = 0; lp < props.length; lp++) {\r\n            func(props[lp]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper function to check whether the provided function name is a potential candidate for dynamic\r\n * callback and prototype generation.\r\n * @param target The target object, may be a prototype or class object\r\n * @param funcName The function name\r\n * @param skipOwn Skips the check for own property\r\n * @ignore\r\n */\r\nfunction _isDynamicCandidate(target, funcName, skipOwn) {\r\n    return (funcName !== Constructor && typeof target[funcName] === strFunction && (skipOwn || _hasOwnProperty(target, funcName)));\r\n}\r\n/**\r\n * Helper to throw a TypeError exception\r\n * @param message the message\r\n * @ignore\r\n */\r\nfunction _throwTypeError(message) {\r\n    throw new TypeError(\"DynamicProto: \" + message);\r\n}\r\n/**\r\n * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does\r\n * not return any inherited functions\r\n * @param thisTarget The object to get the instance functions from\r\n * @ignore\r\n */\r\nfunction _getInstanceFuncs(thisTarget) {\r\n    // Get the base proto\r\n    var instFuncs = {};\r\n    // Save any existing instance functions\r\n    _forEachProp(thisTarget, function (name) {\r\n        // Don't include any dynamic prototype instances - as we only want the real functions\r\n        if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {\r\n            // Create an instance callback for passing the base function to the caller\r\n            instFuncs[name] = thisTarget[name];\r\n        }\r\n    });\r\n    return instFuncs;\r\n}\r\n/**\r\n * Returns whether the value is included in the array\r\n * @param values The array of values\r\n * @param value  The value\r\n */\r\nfunction _hasVisited(values, value) {\r\n    for (var lp = values.length - 1; lp >= 0; lp--) {\r\n        if (values[lp] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns an object that contains callback functions for all \"base/super\" functions, this is used to \"save\"\r\n * enabling calling super.xxx() functions without requiring that the base \"class\" has defined a prototype references\r\n * @param target The current instance\r\n * @ignore\r\n */\r\nfunction _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {\r\n    function _instFuncProxy(target, funcHost, funcName) {\r\n        var theFunc = funcHost[funcName];\r\n        if (theFunc[DynProxyTag] && useBaseInst) {\r\n            // grab and reuse the hosted looking function (if available) otherwise the original passed function\r\n            var instFuncTable = target[DynInstFuncTable] || {};\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;\r\n            }\r\n        }\r\n        return function () {\r\n            return theFunc.apply(target, arguments);\r\n        };\r\n    }\r\n    // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)\r\n    var baseFuncs = {};\r\n    _forEachProp(instFuncs, function (name) {\r\n        // Create an instance callback for passing the base function to the caller\r\n        baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);\r\n    });\r\n    // Get the base prototype functions\r\n    var baseProto = _getObjProto(classProto);\r\n    var visited = [];\r\n    // Don't include base object functions for Object, Array or Function\r\n    while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {\r\n        // look for prototype functions\r\n        _forEachProp(baseProto, function (name) {\r\n            // Don't include any dynamic prototype instances - as we only want the real functions\r\n            // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the \r\n            // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return\r\n            // the Object prototype methods while bypassing the check\r\n            if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {\r\n                // Create an instance callback for passing the base function to the caller\r\n                baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);\r\n            }\r\n        });\r\n        // We need to find all possible functions that might be overloaded by walking the entire prototype chain\r\n        // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n        // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n        visited.push(baseProto);\r\n        baseProto = _getObjProto(baseProto);\r\n    }\r\n    return baseFuncs;\r\n}\r\nfunction _getInstFunc(target, funcName, proto, currentDynProtoProxy) {\r\n    var instFunc = null;\r\n    // We need to check whether the class name is defined directly on this prototype otherwise\r\n    // it will walk the proto chain and return any parent proto classname.\r\n    if (target && _hasOwnProperty(proto, DynClassName)) {\r\n        var instFuncTable = target[DynInstFuncTable] || {};\r\n        instFunc = (instFuncTable[proto[DynClassName]] || {})[funcName];\r\n        if (!instFunc) {\r\n            // Avoid stack overflow from recursive calling the same function\r\n            _throwTypeError(\"Missing [\" + funcName + \"] \" + strFunction);\r\n        }\r\n        // We have the instance function, lets check it we can speed up further calls\r\n        // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)\r\n        if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {\r\n            // If the instance already has an instance function we can't replace it\r\n            var canAddInst = !_hasOwnProperty(target, funcName);\r\n            // Get current prototype\r\n            var objProto = _getObjProto(target);\r\n            var visited = [];\r\n            // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function\r\n            // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut\r\n            while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {\r\n                var protoFunc = objProto[funcName];\r\n                if (protoFunc) {\r\n                    canAddInst = (protoFunc === currentDynProtoProxy);\r\n                    break;\r\n                }\r\n                // We need to find all possible initial functions to ensure that we don't bypass a valid override function\r\n                visited.push(objProto);\r\n                objProto = _getObjProto(objProto);\r\n            }\r\n            try {\r\n                if (canAddInst) {\r\n                    // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version\r\n                    // so it's safe to directly assign for any subsequent calls (for better performance)\r\n                    target[funcName] = instFunc;\r\n                }\r\n                // Block further attempts to set the instance function for any\r\n                instFunc[DynInstChkTag] = 1;\r\n            }\r\n            catch (e) {\r\n                // Don't crash if the object is readonly or the runtime doesn't allow changing this\r\n                // And set a flag so we don't try again for any function\r\n                instFuncTable[DynAllowInstChkTag] = false;\r\n            }\r\n        }\r\n    }\r\n    return instFunc;\r\n}\r\nfunction _getProtoFunc(funcName, proto, currentDynProtoProxy) {\r\n    var protoFunc = proto[funcName];\r\n    // Check that the prototype function is not a self reference -- try to avoid stack overflow!\r\n    if (protoFunc === currentDynProtoProxy) {\r\n        // It is so lookup the base prototype\r\n        protoFunc = _getObjProto(proto)[funcName];\r\n    }\r\n    if (typeof protoFunc !== strFunction) {\r\n        _throwTypeError(\"[\" + funcName + \"] is not a \" + strFunction);\r\n    }\r\n    return protoFunc;\r\n}\r\n/**\r\n * Add the required dynamic prototype methods to the the class prototype\r\n * @param proto - The class prototype\r\n * @param className - The instance classname\r\n * @param target - The target instance\r\n * @param baseInstFuncs - The base instance functions\r\n * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist\r\n * @ignore\r\n */\r\nfunction _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {\r\n    function _createDynamicPrototype(proto, funcName) {\r\n        var dynProtoProxy = function () {\r\n            // Use the instance or prototype function\r\n            var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);\r\n            return instFunc.apply(this, arguments);\r\n        };\r\n        // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing\r\n        // via which can dynamically replace the prototype function reference)\r\n        dynProtoProxy[DynProxyTag] = 1;\r\n        return dynProtoProxy;\r\n    }\r\n    if (!_isObjectOrArrayPrototype(proto)) {\r\n        var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || {};\r\n        var instFuncs_1 = instFuncTable[className] = (instFuncTable[className] || {}); // fetch and assign if as it may not exist yet\r\n        // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable\r\n        if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n            instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;\r\n        }\r\n        _forEachProp(target, function (name) {\r\n            // Only add overridden functions\r\n            if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {\r\n                // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function\r\n                instFuncs_1[name] = target[name];\r\n                delete target[name];\r\n                // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one\r\n                if (!_hasOwnProperty(proto, name) || (proto[name] && !proto[name][DynProxyTag])) {\r\n                    proto[name] = _createDynamicPrototype(proto, name);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance\r\n * @param classProto The class prototype instance\r\n * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy\r\n * @ignore\r\n */\r\nfunction _checkPrototype(classProto, thisTarget) {\r\n    // This method doesn't existing in older browsers (e.g. IE8)\r\n    if (_objGetPrototypeOf) {\r\n        // As this is primarily a coding time check, don't bother checking if running in IE8 or lower\r\n        var visited = [];\r\n        var thisProto = _getObjProto(thisTarget);\r\n        while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto) && !_hasVisited(visited, thisProto)) {\r\n            if (thisProto === classProto) {\r\n                return true;\r\n            }\r\n            // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n            // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n            visited.push(thisProto);\r\n            thisProto = _getObjProto(thisProto);\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.\r\n * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.\r\n * @param target\r\n * @param unknownValue\r\n * @ignore\r\n */\r\nfunction _getObjName(target, unknownValue) {\r\n    if (_hasOwnProperty(target, Prototype)) {\r\n        // Look like a prototype\r\n        return target.name || unknownValue || UnknownValue;\r\n    }\r\n    return (((target || {})[Constructor]) || {}).name || unknownValue || UnknownValue;\r\n}\r\n/**\r\n * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-\r\n * - Saves references to all defined base class functions\r\n * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all \"super\" functions.\r\n * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.\r\n * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is\r\n * passed both the target \"this\" and an object that can be used to call any base (super) functions, using this based object in place of\r\n * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct \"this\"\r\n * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions\r\n * defined in the constructor or some other function (rather than declared as complete typescript functions).\r\n * ### Usage\r\n * ```typescript\r\n * import dynamicProto from \"@microsoft/dynamicproto-js\";\r\n * class ExampleClass extends BaseClass {\r\n *     constructor() {\r\n *         dynamicProto(ExampleClass, this, (_self, base) => {\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.newFunc = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     ...\r\n *                 }\r\n *             }\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.myFunction = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     // Call the base version of the function that we are overriding\r\n *                     base.myFunction();\r\n *                 }\r\n *                 ...\r\n *             }\r\n *             _self.initialize = () => {\r\n *                 ...\r\n *             }\r\n *             // Warnings: While the following will work as _self is simply a reference to\r\n *             // this, if anyone overrides myFunction() the overridden will be called first\r\n *             // as the normal JavaScript method resolution will occur and the defined\r\n *             // _self.initialize() function is actually gets removed from the instance and\r\n *             // a proxy prototype version is created to reference the created method.\r\n *             _self.initialize();\r\n *         });\r\n *     }\r\n * }\r\n * ```\r\n * @typeparam DPType This is the generic type of the class, used to keep intellisense valid\r\n * @typeparam DPCls The type that contains the prototype of the current class\r\n * @param theClass - This is the current class instance which contains the prototype for the current class\r\n * @param target - The current \"this\" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.\r\n * @param delegateFunc - The callback function (closure) that will create the dynamic function\r\n * @param options - Additional options to configure how the dynamic prototype operates\r\n */\r\nfunction dynamicProto(theClass, target, delegateFunc, options) {\r\n    // Make sure that the passed theClass argument looks correct\r\n    if (!_hasOwnProperty(theClass, Prototype)) {\r\n        _throwTypeError(\"theClass is an invalid class definition.\");\r\n    }\r\n    // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)\r\n    var classProto = theClass[Prototype];\r\n    if (!_checkPrototype(classProto, target)) {\r\n        _throwTypeError(\"[\" + _getObjName(theClass) + \"] is not in class hierarchy of [\" + _getObjName(target) + \"]\");\r\n    }\r\n    var className = null;\r\n    if (_hasOwnProperty(classProto, DynClassName)) {\r\n        // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)\r\n        className = classProto[DynClassName];\r\n    }\r\n    else {\r\n        // As not all browser support name on the prototype creating a unique dynamic one if we have not already\r\n        // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance\r\n        // function table lookup.\r\n        className = DynClassNamePrefix + _getObjName(theClass, \"_\") + \"$\" + _dynamicNames;\r\n        _dynamicNames++;\r\n        classProto[DynClassName] = className;\r\n    }\r\n    var perfOptions = dynamicProto[DynProtoDefaultOptions];\r\n    var useBaseInst = !!perfOptions[strUseBaseInst];\r\n    if (useBaseInst && options && options[strUseBaseInst] !== undefined) {\r\n        useBaseInst = !!options[strUseBaseInst];\r\n    }\r\n    // Get the current instance functions\r\n    var instFuncs = _getInstanceFuncs(target);\r\n    // Get all of the functions for any base instance (before they are potentially overridden)\r\n    var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst);\r\n    // Execute the delegate passing in both the current target \"this\" and \"base\" function references\r\n    // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support\r\n    delegateFunc(target, baseFuncs);\r\n    // Don't allow setting instance functions for older IE instances\r\n    var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];\r\n    if (setInstanceFunc && options) {\r\n        setInstanceFunc = !!options[strSetInstFuncs];\r\n    }\r\n    // Populate the Prototype for any overridden instance functions\r\n    _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);\r\n}\r\n/**\r\n * Exposes the default global options to allow global configuration, if the global values are disabled these will override\r\n * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose\r\n * their internal usage of dynamic proto.\r\n */\r\nvar perfDefaults = {\r\n    setInstFuncs: true,\r\n    useBaseInst: true\r\n};\r\n// And expose for testing\r\ndynamicProto[DynProtoDefaultOptions] = perfDefaults;\n\nexport default dynamicProto;\n//# sourceMappingURL=dynamicproto-js.js.map\n","/*\n * Application Insights JavaScript SDK - Core, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n    InvalidEvent: 70,\r\n    FailedMonitorAjaxSetRequestHeader: 71,\r\n    SendBrowserInfoOnUserInit: 72,\r\n    PluginException: 73,\r\n    NotificationException: 74,\r\n    SnippetScriptLoadFailure: 99,\r\n    InvalidInstrumentationKey: 100,\r\n    CannotParseAiBlobValue: 101,\r\n    InvalidContentBlob: 102,\r\n    TrackPageActionEventFailed: 103,\r\n    FailedAddingCustomDefinedRequestContext: 104,\r\n    InMemoryStorageBufferFull: 105\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strShimUndefined, strShimObject, strShimFunction, throwTypeError, ObjClass, ObjProto, ObjAssign, ObjHasOwnProperty, ObjDefineProperty } from \"@microsoft/applicationinsights-shims\";\r\n// RESTRICT and AVOID circular dependencies you should not import other contained modules or export the contents of this file directly\r\n// Added to help with minfication\r\nvar strOnPrefix = \"on\";\r\nvar strAttachEvent = \"attachEvent\";\r\nvar strAddEventHelper = \"addEventListener\";\r\nvar strDetachEvent = \"detachEvent\";\r\nvar strRemoveEventListener = \"removeEventListener\";\r\nvar _objDefineProperty = ObjDefineProperty;\r\nvar _objFreeze = ObjClass[\"freeze\"];\r\nvar _objSeal = ObjClass[\"seal\"];\r\nexport function objToString(obj) {\r\n    return ObjProto.toString.call(obj);\r\n}\r\nexport function isTypeof(value, theType) {\r\n    return typeof value === theType;\r\n}\r\nexport function isUndefined(value) {\r\n    return value === undefined || typeof value === strShimUndefined;\r\n}\r\nexport function isNotUndefined(value) {\r\n    return !isUndefined(value);\r\n}\r\nexport function isNullOrUndefined(value) {\r\n    return (value === null || isUndefined(value));\r\n}\r\nexport function isNotNullOrUndefined(value) {\r\n    return !isNullOrUndefined(value);\r\n}\r\nexport function hasOwnProperty(obj, prop) {\r\n    return obj && ObjHasOwnProperty.call(obj, prop);\r\n}\r\nexport function isObject(value) {\r\n    // Changing to inline for performance\r\n    return typeof value === strShimObject;\r\n}\r\nexport function isFunction(value) {\r\n    // Changing to inline for performance\r\n    return typeof value === strShimFunction;\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj Object to add the event too.\r\n * @param eventNameWithoutOn String that specifies any of the standard DHTML Events without \"on\" prefix\r\n * @param handlerRef Pointer that specifies the function to call when event fires\r\n * @param useCapture [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function attachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    var result = false;\r\n    if (!isNullOrUndefined(obj)) {\r\n        try {\r\n            if (!isNullOrUndefined(obj[strAddEventHelper])) {\r\n                // all browsers except IE before version 9\r\n                obj[strAddEventHelper](eventNameWithoutOn, handlerRef, useCapture);\r\n                result = true;\r\n            }\r\n            else if (!isNullOrUndefined(obj[strAttachEvent])) {\r\n                // IE before version 9\r\n                obj[strAttachEvent](strOnPrefix + eventNameWithoutOn, handlerRef);\r\n                result = true;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object to remove the event from\r\n * @param eventNameWithoutOn {string} - The name of the event\r\n * @param handlerRef {any} - The callback function that needs to be executed for the given event\r\n * @param useCapture [Optional] Defaults to false\r\n */\r\nexport function detachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    if (!isNullOrUndefined(obj)) {\r\n        try {\r\n            if (!isNullOrUndefined(obj[strRemoveEventListener])) {\r\n                obj[strRemoveEventListener](eventNameWithoutOn, handlerRef, useCapture);\r\n            }\r\n            else if (!isNullOrUndefined(obj[strDetachEvent])) {\r\n                obj[strDetachEvent](strOnPrefix + eventNameWithoutOn, handlerRef);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    var match = /([^\\w\\d_$])/g;\r\n    if (match.test(name)) {\r\n        value = name.replace(match, \"_\");\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * This is a helper function for the equivalent of arForEach(objKeys(target), callbackFn), this is a\r\n * performance optimization to avoid the creation of a new array for large objects\r\n * @param target The target object to find and process the keys\r\n * @param callbackfn The function to call with the details\r\n */\r\nexport function objForEachKey(target, callbackfn) {\r\n    if (target) {\r\n        for (var prop in target) {\r\n            if (ObjHasOwnProperty.call(target, prop)) {\r\n                callbackfn.call(target, prop, target[prop]);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * The strEndsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.\r\n * @param value - The value to check whether it ends with the search value.\r\n * @param search - The characters to be searched for at the end of the value.\r\n * @returns true if the given search value is found at the end of the string, otherwise false.\r\n */\r\nexport function strEndsWith(value, search) {\r\n    if (value && search) {\r\n        var searchLen = search.length;\r\n        var valLen = value.length;\r\n        if (value === search) {\r\n            return true;\r\n        }\r\n        else if (valLen >= searchLen) {\r\n            var pos = valLen - 1;\r\n            for (var lp = searchLen - 1; lp >= 0; lp--) {\r\n                if (value[pos] != search[lp]) {\r\n                    return false;\r\n                }\r\n                pos--;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * The strStartsWith() method determines whether a string starts with the characters of the specified string, returning true or false as appropriate.\r\n * @param value - The value to check whether it ends with the search value.\r\n * @param checkValue - The characters to be searched for at the start of the value.\r\n * @returns true if the given search value is found at the start of the string, otherwise false.\r\n */\r\nexport function strStartsWith(value, checkValue) {\r\n    // Using helper for performance and because string startsWith() is not available on IE\r\n    var result = false;\r\n    if (value && checkValue) {\r\n        var chkLen = checkValue.length;\r\n        if (value === checkValue) {\r\n            return true;\r\n        }\r\n        else if (value.length >= chkLen) {\r\n            for (var lp = 0; lp < chkLen; lp++) {\r\n                if (value[lp] !== checkValue[lp]) {\r\n                    return false;\r\n                }\r\n            }\r\n            result = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * A simple wrapper (for minification support) to check if the value contains the search string.\r\n * @param value - The string value to check for the existence of the search value\r\n * @param search - The value search within the value\r\n */\r\nexport function strContains(value, search) {\r\n    if (value && search) {\r\n        return value.indexOf(search) !== -1;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Check if an object is of type Date\r\n */\r\nexport function isDate(obj) {\r\n    return objToString(obj) === \"[object Date]\";\r\n}\r\n/**\r\n * Check if an object is of type Array\r\n */\r\nexport function isArray(obj) {\r\n    return objToString(obj) === \"[object Array]\";\r\n}\r\n/**\r\n * Check if an object is of type Error\r\n */\r\nexport function isError(obj) {\r\n    return objToString(obj) === \"[object Error]\";\r\n}\r\n/**\r\n * Checks if the type of value is a string.\r\n * @param {any} value - Value to be checked.\r\n * @return {boolean} True if the value is a string, false otherwise.\r\n */\r\nexport function isString(value) {\r\n    // Changing to inline for performance\r\n    return typeof value === \"string\";\r\n}\r\n/**\r\n * Checks if the type of value is a number.\r\n * @param {any} value - Value to be checked.\r\n * @return {boolean} True if the value is a number, false otherwise.\r\n */\r\nexport function isNumber(value) {\r\n    // Changing to inline for performance\r\n    return typeof value === \"number\";\r\n}\r\n/**\r\n * Checks if the type of value is a boolean.\r\n * @param {any} value - Value to be checked.\r\n * @return {boolean} True if the value is a boolean, false otherwise.\r\n */\r\nexport function isBoolean(value) {\r\n    // Changing to inline for performance\r\n    return typeof value === \"boolean\";\r\n}\r\n/**\r\n * Checks if the type of value is a Symbol.\r\n * This only returns a boolean as returning value is Symbol will cause issues for older TypeScript consumers\r\n * @param {any} value - Value to be checked.\r\n * @return {boolean} True if the value is a Symbol, false otherwise.\r\n */\r\nexport function isSymbol(value) {\r\n    return typeof value === \"symbol\";\r\n}\r\n/**\r\n * Convert a date to I.S.O. format in IE8\r\n */\r\nexport function toISOString(date) {\r\n    if (isDate(date)) {\r\n        var pad = function (num) {\r\n            var r = String(num);\r\n            if (r.length === 1) {\r\n                r = \"0\" + r;\r\n            }\r\n            return r;\r\n        };\r\n        return date.getUTCFullYear()\r\n            + \"-\" + pad(date.getUTCMonth() + 1)\r\n            + \"-\" + pad(date.getUTCDate())\r\n            + \"T\" + pad(date.getUTCHours())\r\n            + \":\" + pad(date.getUTCMinutes())\r\n            + \":\" + pad(date.getUTCSeconds())\r\n            + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n            + \"Z\";\r\n    }\r\n}\r\n/**\r\n * Performs the specified action for each element in an array. This helper exists to avoid adding a polyfil for older browsers\r\n * that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype\r\n * implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would\r\n * cause a testing requirement to test with and without the implementations\r\n * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array. It can return -1 to break out of the loop\r\n * @param thisArg  [Optional] An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n */\r\nexport function arrForEach(arr, callbackfn, thisArg) {\r\n    var len = arr.length;\r\n    try {\r\n        for (var idx = 0; idx < len; idx++) {\r\n            if (idx in arr) {\r\n                if (callbackfn.call(thisArg || arr, arr[idx], idx, arr) === -1) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n}\r\n/**\r\n * Returns the index of the first occurrence of a value in an array. This helper exists to avoid adding a polyfil for older browsers\r\n * that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype\r\n * implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would\r\n * cause a testing requirement to test with and without the implementations\r\n * @param searchElement The value to locate in the array.\r\n * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n */\r\nexport function arrIndexOf(arr, searchElement, fromIndex) {\r\n    var len = arr.length;\r\n    var from = fromIndex || 0;\r\n    try {\r\n        for (var lp = Math.max(from >= 0 ? from : len - Math.abs(from), 0); lp < len; lp++) {\r\n            if (lp in arr && arr[lp] === searchElement) {\r\n                return lp;\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Calls a defined callback function on each element of an array, and returns an array that contains the results. This helper exists\r\n * to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page\r\n * checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx\r\n * implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\r\n * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n */\r\nexport function arrMap(arr, callbackfn, thisArg) {\r\n    var len = arr.length;\r\n    var _this = thisArg || arr;\r\n    var results = new Array(len);\r\n    try {\r\n        for (var lp = 0; lp < len; lp++) {\r\n            if (lp in arr) {\r\n                results[lp] = callbackfn.call(_this, arr[lp], arr);\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return results;\r\n}\r\n/**\r\n * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is\r\n * provided as an argument in the next call to the callback function. This helper exists to avoid adding a polyfil for older browsers that do not define\r\n * Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency\r\n * this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\r\n * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n */\r\nexport function arrReduce(arr, callbackfn, initialValue) {\r\n    var len = arr.length;\r\n    var lp = 0;\r\n    var value;\r\n    // Specifically checking the number of passed arguments as the value could be anything\r\n    if (arguments.length >= 3) {\r\n        value = arguments[2];\r\n    }\r\n    else {\r\n        while (lp < len && !(lp in arr)) {\r\n            lp++;\r\n        }\r\n        value = arr[lp++];\r\n    }\r\n    while (lp < len) {\r\n        if (lp in arr) {\r\n            value = callbackfn(value, arr[lp], lp, arr);\r\n        }\r\n        lp++;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n */\r\nexport function strTrim(str) {\r\n    if (typeof str !== \"string\") {\r\n        return str;\r\n    }\r\n    return str.replace(/^\\s+|\\s+$/g, \"\");\r\n}\r\nvar _objKeysHasDontEnumBug = !({ toString: null }).propertyIsEnumerable(\"toString\");\r\nvar _objKeysDontEnums = [\r\n    \"toString\",\r\n    \"toLocaleString\",\r\n    \"valueOf\",\r\n    \"hasOwnProperty\",\r\n    \"isPrototypeOf\",\r\n    \"propertyIsEnumerable\",\r\n    \"constructor\"\r\n];\r\n/**\r\n * Returns the names of the enumerable string properties and methods of an object. This helper exists to avoid adding a polyfil for older browsers\r\n * that do not define Object.keys eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n * Note: For consistency this will not use the Object.keys implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n * @param obj Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\r\n */\r\nexport function objKeys(obj) {\r\n    var objType = typeof obj;\r\n    if (objType !== strShimFunction && (objType !== strShimObject || obj === null)) {\r\n        throwTypeError(\"objKeys called on non-object\");\r\n    }\r\n    var result = [];\r\n    for (var prop in obj) {\r\n        if (obj && ObjHasOwnProperty.call(obj, prop)) {\r\n            result.push(prop);\r\n        }\r\n    }\r\n    if (_objKeysHasDontEnumBug) {\r\n        var dontEnumsLength = _objKeysDontEnums.length;\r\n        for (var lp = 0; lp < dontEnumsLength; lp++) {\r\n            if (obj && ObjHasOwnProperty.call(obj, _objKeysDontEnums[lp])) {\r\n                result.push(_objKeysDontEnums[lp]);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Try to define get/set object property accessors for the target object/prototype, this will provide compatibility with\r\n * existing API definition when run within an ES5+ container that supports accessors but still enable the code to be loaded\r\n * and executed in an ES3 container, providing basic IE8 compatibility.\r\n * @param target The object on which to define the property.\r\n * @param prop The name of the property to be defined or modified.\r\n * @param getProp The getter function to wire against the getter.\r\n * @param setProp The setter function to wire against the setter.\r\n * @returns True if it was able to create the accessors otherwise false\r\n */\r\nexport function objDefineAccessors(target, prop, getProp, setProp) {\r\n    if (_objDefineProperty) {\r\n        try {\r\n            var descriptor = {\r\n                enumerable: true,\r\n                configurable: true\r\n            };\r\n            if (getProp) {\r\n                descriptor.get = getProp;\r\n            }\r\n            if (setProp) {\r\n                descriptor.set = setProp;\r\n            }\r\n            _objDefineProperty(target, prop, descriptor);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            // IE8 Defines a defineProperty on Object but it's only supported for DOM elements so it will throw\r\n            // We will just ignore this here.\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function objFreeze(value) {\r\n    if (_objFreeze) {\r\n        value = _objFreeze(value);\r\n    }\r\n    return value;\r\n}\r\nexport function objSeal(value) {\r\n    if (_objSeal) {\r\n        value = _objSeal(value);\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Return the current time via the Date now() function (if available) and falls back to (new Date()).getTime() if now() is unavailable (IE8 or less)\r\n * https://caniuse.com/#search=Date.now\r\n */\r\nexport function dateNow() {\r\n    var dt = Date;\r\n    if (dt.now) {\r\n        return dt.now();\r\n    }\r\n    return new dt().getTime();\r\n}\r\n/**\r\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n */\r\nexport function getExceptionName(object) {\r\n    if (isError(object)) {\r\n        return object.name;\r\n    }\r\n    return \"\";\r\n}\r\n/**\r\n * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk\r\n * function will only be called if the new value is no equal to the original value.\r\n * @param target - The target object\r\n * @param field - The key of the target\r\n * @param value - The value to set\r\n * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set\r\n * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)\r\n * @returns The existing or new value, depending what was set\r\n */\r\nexport function setValue(target, field, value, valChk, srcChk) {\r\n    var theValue = value;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (theValue !== value && (!srcChk || srcChk(theValue)) && (!valChk || valChk(value))) {\r\n            theValue = value;\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\r\n * @param target - The target object to return or set the default value\r\n * @param field - The key for the field to set on the target\r\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\r\n */\r\nexport function getSetValue(target, field, defValue) {\r\n    var theValue;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (!theValue && isNullOrUndefined(theValue)) {\r\n            // Supports having the default as null\r\n            theValue = !isUndefined(defValue) ? defValue : {};\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    else {\r\n        // Expanded for performance so we only check defValue if required\r\n        theValue = !isUndefined(defValue) ? defValue : {};\r\n    }\r\n    return theValue;\r\n}\r\nexport function isNotTruthy(value) {\r\n    return !value;\r\n}\r\nexport function isTruthy(value) {\r\n    return !!value;\r\n}\r\nexport function throwError(message) {\r\n    throw new Error(message);\r\n}\r\n/**\r\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from\r\n * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential\r\n * implementation issues by assigning prototype functions as instance ones\r\n *\r\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\r\n *\r\n * Special ES3 Notes:\r\n * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the\r\n * properties of \"referenced\" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the\r\n * same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied\r\n * @memberof Initialization\r\n */\r\nexport function proxyAssign(target, source, chkSet) {\r\n    if (target && source && target !== source && isObject(target) && isObject(source)) {\r\n        var _loop_1 = function (field) {\r\n            if (isString(field)) {\r\n                var value = source[field];\r\n                if (isFunction(value)) {\r\n                    if (!chkSet || chkSet(field, true, source, target)) {\r\n                        // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function\r\n                        target[field] = (function (funcName) {\r\n                            return function () {\r\n                                // Capture the original arguments passed to the method\r\n                                var originalArguments = arguments;\r\n                                return source[funcName].apply(source, originalArguments);\r\n                            };\r\n                        })(field);\r\n                    }\r\n                }\r\n                else if (!chkSet || chkSet(field, false, source, target)) {\r\n                    if (hasOwnProperty(target, field)) {\r\n                        // Remove any previous instance property\r\n                        delete target[field];\r\n                    }\r\n                    if (!objDefineAccessors(target, field, function () {\r\n                        return source[field];\r\n                    }, function (theValue) {\r\n                        source[field] = theValue;\r\n                    })) {\r\n                        // Unable to create an accessor, so just assign the values as a fallback\r\n                        // -- this will (mostly) work for objects\r\n                        // -- but will fail for accessing primitives (if the source changes it) and all types of \"setters\" as the source won't be modified\r\n                        target[field] = value;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        // effectively apply/proxy full source to the target instance\r\n        for (var field in source) {\r\n            _loop_1(field);\r\n        }\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults.\r\n * Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\r\n * @param defaults Simple helper\r\n */\r\nexport function createClassFromInterface(defaults) {\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            var _this_1 = this;\r\n            if (defaults) {\r\n                objForEachKey(defaults, function (field, value) {\r\n                    _this_1[field] = value;\r\n                });\r\n            }\r\n        }\r\n        return class_1;\r\n    }());\r\n}\r\n/**\r\n * A helper function to assist with JIT performance for objects that have properties added / removed dynamically\r\n * this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this\r\n * function after you have finished \"updating\" the object, calling this within loops reduces or defeats the benefits.\r\n * This helps when iterating using for..in, objKeys() and objForEach()\r\n * @param theObject - The object to be optimized if possible\r\n */\r\nexport function optimizeObject(theObject) {\r\n    // V8 Optimization to cause the JIT compiler to create a new optimized object for looking up the own properties\r\n    // primarily for object with <= 19 properties for >= 20 the effect is reduced or non-existent\r\n    if (theObject) {\r\n        theObject = ObjClass(ObjAssign ? ObjAssign({}, theObject) : theObject);\r\n    }\r\n    return theObject;\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { getGlobal, strShimUndefined, strShimObject, strShimPrototype } from \"@microsoft/applicationinsights-shims\";\r\nimport { isString, isUndefined, strContains } from \"./HelperFuncs\";\r\n/**\r\n * This file exists to hold environment utilities that are required to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only use defined methods (functions) in this class so that users of these\r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\nvar strWindow = \"window\";\r\nvar strDocument = \"document\";\r\nvar strNavigator = \"navigator\";\r\nvar strHistory = \"history\";\r\nvar strLocation = \"location\";\r\nvar strConsole = \"console\";\r\nvar strPerformance = \"performance\";\r\nvar strJSON = \"JSON\";\r\nvar strCrypto = \"crypto\";\r\nvar strMsCrypto = \"msCrypto\";\r\nvar strReactNative = \"ReactNative\";\r\nvar strMsie = \"msie\";\r\nvar strTrident = \"trident/\";\r\nvar _isTrident = null;\r\nvar _navUserAgentCheck = null;\r\nvar _enableMocks = false;\r\nvar _useXDomainRequest = null;\r\nvar _beaconsSupported = null;\r\nfunction _hasProperty(theClass, property) {\r\n    var supported = false;\r\n    if (theClass) {\r\n        try {\r\n            supported = property in theClass;\r\n            if (!supported) {\r\n                var proto = theClass[strShimPrototype];\r\n                if (proto) {\r\n                    supported = property in proto;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Do Nothing\r\n        }\r\n        if (!supported) {\r\n            try {\r\n                var tmp = new theClass();\r\n                supported = !isUndefined(tmp[property]);\r\n            }\r\n            catch (e) {\r\n                // Do Nothing\r\n            }\r\n        }\r\n    }\r\n    return supported;\r\n}\r\n/**\r\n * Enable the lookup of test mock objects if requested\r\n * @param enabled\r\n */\r\nexport function setEnableEnvMocks(enabled) {\r\n    _enableMocks = enabled;\r\n}\r\n/**\r\n * Return the named global object if available, will return null if the object is not available.\r\n * @param name The globally named object\r\n */\r\nexport function getGlobalInst(name) {\r\n    var gbl = getGlobal();\r\n    if (gbl && gbl[name]) {\r\n        return gbl[name];\r\n    }\r\n    // Test workaround, for environments where <global>.window (when global == window) doesn't return the base window\r\n    if (name === strWindow && hasWindow()) {\r\n        // tslint:disable-next-line: no-angle-bracket-type-assertion\r\n        return window;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Checks if window object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a window\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: window is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasWindow() {\r\n    return Boolean(typeof window === strShimObject && window);\r\n}\r\n/**\r\n * Returns the global window object if it is present otherwise null.\r\n * This helper is used to access the window object without causing an exception\r\n * \"Uncaught ReferenceError: window is not defined\"\r\n */\r\nexport function getWindow() {\r\n    if (hasWindow()) {\r\n        return window;\r\n    }\r\n    // Return the global instance or null\r\n    return getGlobalInst(strWindow);\r\n}\r\n/**\r\n * Checks if document object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a document\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: document is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasDocument() {\r\n    return Boolean(typeof document === strShimObject && document);\r\n}\r\n/**\r\n * Returns the global document object if it is present otherwise null.\r\n * This helper is used to access the document object without causing an exception\r\n * \"Uncaught ReferenceError: document is not defined\"\r\n */\r\nexport function getDocument() {\r\n    if (hasDocument()) {\r\n        return document;\r\n    }\r\n    return getGlobalInst(strDocument);\r\n}\r\n/**\r\n * Checks if navigator object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a navigator\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: navigator is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasNavigator() {\r\n    return Boolean(typeof navigator === strShimObject && navigator);\r\n}\r\n/**\r\n * Returns the global navigator object if it is present otherwise null.\r\n * This helper is used to access the navigator object without causing an exception\r\n * \"Uncaught ReferenceError: navigator is not defined\"\r\n */\r\nexport function getNavigator() {\r\n    if (hasNavigator()) {\r\n        return navigator;\r\n    }\r\n    return getGlobalInst(strNavigator);\r\n}\r\n/**\r\n * Checks if history object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: history is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasHistory() {\r\n    return Boolean(typeof history === strShimObject && history);\r\n}\r\n/**\r\n * Returns the global history object if it is present otherwise null.\r\n * This helper is used to access the history object without causing an exception\r\n * \"Uncaught ReferenceError: history is not defined\"\r\n */\r\nexport function getHistory() {\r\n    if (hasHistory()) {\r\n        return history;\r\n    }\r\n    return getGlobalInst(strHistory);\r\n}\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation(checkForMock) {\r\n    if (checkForMock && _enableMocks) {\r\n        var mockLocation = getGlobalInst(\"__mockLocation\");\r\n        if (mockLocation) {\r\n            return mockLocation;\r\n        }\r\n    }\r\n    if (typeof location === strShimObject && location) {\r\n        return location;\r\n    }\r\n    return getGlobalInst(strLocation);\r\n}\r\n/**\r\n * Returns the global console object\r\n */\r\nexport function getConsole() {\r\n    if (typeof console !== strShimUndefined) {\r\n        return console;\r\n    }\r\n    return getGlobalInst(strConsole);\r\n}\r\n/**\r\n * Returns the performance object if it is present otherwise null.\r\n * This helper is used to access the performance object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getPerformance() {\r\n    return getGlobalInst(strPerformance);\r\n}\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON() {\r\n    return Boolean((typeof JSON === strShimObject && JSON) || getGlobalInst(strJSON) !== null);\r\n}\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON() {\r\n    if (hasJSON()) {\r\n        return JSON || getGlobalInst(strJSON);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getCrypto() {\r\n    return getGlobalInst(strCrypto);\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getMsCrypto() {\r\n    return getGlobalInst(strMsCrypto);\r\n}\r\n/**\r\n * Returns whether the environment is reporting that we are running in a React Native Environment\r\n */\r\nexport function isReactNative() {\r\n    // If running in React Native, navigator.product will be populated\r\n    var nav = getNavigator();\r\n    if (nav && nav.product) {\r\n        return nav.product === strReactNative;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Identifies whether the current environment appears to be IE\r\n */\r\nexport function isIE() {\r\n    var nav = getNavigator();\r\n    if (nav && (nav.userAgent !== _navUserAgentCheck || _isTrident === null)) {\r\n        // Added to support test mocking of the user agent\r\n        _navUserAgentCheck = nav.userAgent;\r\n        var userAgent = (_navUserAgentCheck || \"\").toLowerCase();\r\n        _isTrident = (strContains(userAgent, strMsie) || strContains(userAgent, strTrident));\r\n    }\r\n    return _isTrident;\r\n}\r\n/**\r\n * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\r\n */\r\nexport function getIEVersion(userAgentStr) {\r\n    if (userAgentStr === void 0) { userAgentStr = null; }\r\n    if (!userAgentStr) {\r\n        var navigator_1 = getNavigator() || {};\r\n        userAgentStr = navigator_1 ? (navigator_1.userAgent || \"\").toLowerCase() : \"\";\r\n    }\r\n    var ua = (userAgentStr || \"\").toLowerCase();\r\n    if (strContains(ua, strMsie)) {\r\n        return parseInt(ua.split(strMsie)[1]);\r\n    }\r\n    else if (strContains(ua, strTrident)) {\r\n        var tridentVer = parseInt(ua.split(strTrident)[1]);\r\n        if (tridentVer) {\r\n            return tridentVer + 4;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns string representation of an object suitable for diagnostics logging.\r\n */\r\nexport function dumpObj(object) {\r\n    var objectTypeDump = Object[strShimPrototype].toString.call(object);\r\n    var propertyValueDump = \"\";\r\n    if (objectTypeDump === \"[object Error]\") {\r\n        propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n    }\r\n    else if (hasJSON()) {\r\n        propertyValueDump = getJSON().stringify(object);\r\n    }\r\n    return objectTypeDump + propertyValueDump;\r\n}\r\nexport function isSafari(userAgentStr) {\r\n    if (!userAgentStr || !isString(userAgentStr)) {\r\n        var navigator_2 = getNavigator() || {};\r\n        userAgentStr = navigator_2 ? (navigator_2.userAgent || \"\").toLowerCase() : \"\";\r\n    }\r\n    var ua = (userAgentStr || \"\").toLowerCase();\r\n    return (ua.indexOf(\"safari\") >= 0);\r\n}\r\n/**\r\n * Checks if HTML5 Beacons are supported in the current environment.\r\n * @returns True if supported, false otherwise.\r\n */\r\nexport function isBeaconsSupported() {\r\n    if (_beaconsSupported === null) {\r\n        _beaconsSupported = hasNavigator() && Boolean(getNavigator().sendBeacon);\r\n    }\r\n    return _beaconsSupported;\r\n}\r\n/**\r\n * Checks if the Fetch API is supported in the current environment.\r\n * @param withKeepAlive - [Optional] If True, check if fetch is available and it supports the keepalive feature, otherwise only check if fetch is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isFetchSupported(withKeepAlive) {\r\n    var isSupported = false;\r\n    try {\r\n        var fetchApi = getGlobalInst(\"fetch\");\r\n        isSupported = !!fetchApi;\r\n        var request = getGlobalInst(\"Request\");\r\n        if (isSupported && withKeepAlive && request) {\r\n            isSupported = _hasProperty(request, \"keepalive\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nexport function useXDomainRequest() {\r\n    if (_useXDomainRequest === null) {\r\n        _useXDomainRequest = (typeof XDomainRequest !== undefined);\r\n        if (_useXDomainRequest && isXhrSupported()) {\r\n            _useXDomainRequest = _useXDomainRequest && !_hasProperty(getGlobalInst(\"XMLHttpRequest\"), \"withCredentials\");\r\n        }\r\n    }\r\n    return _useXDomainRequest;\r\n}\r\n/**\r\n * Checks if XMLHttpRequest is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isXhrSupported() {\r\n    var isSupported = false;\r\n    try {\r\n        var xmlHttpRequest = getGlobalInst(\"XMLHttpRequest\");\r\n        isSupported = !!xmlHttpRequest;\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\n//# sourceMappingURL=EnvUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getGlobalInst } from \"./EnvUtils\";\r\nvar listenerFuncs = [\"eventsSent\", \"eventsDiscarded\", \"eventsSendRequest\", \"perfEvent\"];\r\nvar _aiNamespace = null;\r\nvar _debugListener;\r\nfunction _listenerProxyFunc(name, config) {\r\n    return function () {\r\n        var args = arguments;\r\n        var dbgExt = getDebugExt(config);\r\n        if (dbgExt) {\r\n            var listener = dbgExt.listener;\r\n            if (listener && listener[name]) {\r\n                listener[name].apply(listener, args);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction _getExtensionNamespace() {\r\n    // Cache the lookup of the global namespace object\r\n    var target = getGlobalInst(\"Microsoft\");\r\n    if (target) {\r\n        _aiNamespace = target[\"ApplicationInsights\"];\r\n    }\r\n    return _aiNamespace;\r\n}\r\nexport function getDebugExt(config) {\r\n    var ns = _aiNamespace;\r\n    if (!ns && config.disableDbgExt !== true) {\r\n        ns = _aiNamespace || _getExtensionNamespace();\r\n    }\r\n    return ns ? ns[\"ChromeDbgExt\"] : null;\r\n}\r\nexport function getDebugListener(config) {\r\n    if (!_debugListener) {\r\n        _debugListener = {};\r\n        for (var lp = 0; lp < listenerFuncs.length; lp++) {\r\n            _debugListener[listenerFuncs[lp]] = _listenerProxyFunc(listenerFuncs[lp], config);\r\n        }\r\n    }\r\n    return _debugListener;\r\n}\r\n//# sourceMappingURL=DbgExtensionUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { _InternalMessageId, LoggingSeverity } from \"../JavaScriptSDK.Enums/LoggingEnums\";\r\nimport { hasJSON, getJSON, getConsole } from \"./EnvUtils\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isFunction, isNullOrUndefined, isUndefined } from \"./HelperFuncs\";\r\nimport { getDebugExt } from \"./DbgExtensionUtils\";\r\n/**\r\n * For user non actionable traces use AI Internal prefix.\r\n */\r\nvar AiNonUserActionablePrefix = \"AI (Internal): \";\r\n/**\r\n * Prefix of the traces in portal.\r\n */\r\nvar AiUserActionablePrefix = \"AI: \";\r\n/**\r\n *  Session storage key for the prefix for the key indicating message type already logged\r\n */\r\nvar AIInternalMessagePrefix = \"AITR_\";\r\nvar strErrorToConsole = \"errorToConsole\";\r\nvar strWarnToConsole = \"warnToConsole\";\r\nfunction _sanitizeDiagnosticText(text) {\r\n    if (text) {\r\n        return \"\\\"\" + text.replace(/\\\"/g, \"\") + \"\\\"\";\r\n    }\r\n    return \"\";\r\n}\r\nfunction _logToConsole(func, message) {\r\n    var theConsole = getConsole();\r\n    if (!!theConsole) {\r\n        var logFunc = \"log\";\r\n        if (theConsole[func]) {\r\n            logFunc = func;\r\n        }\r\n        if (isFunction(theConsole[logFunc])) {\r\n            theConsole[logFunc](message);\r\n        }\r\n    }\r\n}\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var _self = this;\r\n        _self.messageId = msgId;\r\n        _self.message =\r\n            (isUserAct ? AiUserActionablePrefix : AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var strProps = \"\";\r\n        if (hasJSON()) {\r\n            strProps = getJSON().stringify(properties);\r\n        }\r\n        var diagnosticText = (msg ? \" message:\" + _sanitizeDiagnosticText(msg) : \"\") +\r\n            (properties ? \" props:\" + _sanitizeDiagnosticText(strProps) : \"\");\r\n        _self.message += diagnosticText;\r\n    }\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nexport function safeGetLogger(core, config) {\r\n    return (core || {}).logger || new DiagnosticLogger(config);\r\n}\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        this.identifier = \"DiagnosticLogger\";\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        var _messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        var _messageLogged = {};\r\n        dynamicProto(DiagnosticLogger, this, function (_self) {\r\n            if (isNullOrUndefined(config)) {\r\n                config = {};\r\n            }\r\n            _self.consoleLoggingLevel = function () { return _getConfigValue(\"loggingLevelConsole\", 0); };\r\n            _self.telemetryLoggingLevel = function () { return _getConfigValue(\"loggingLevelTelemetry\", 1); };\r\n            _self.maxInternalMessageLimit = function () { return _getConfigValue(\"maxMessageLimit\", 25); };\r\n            _self.enableDebugExceptions = function () { return _getConfigValue(\"enableDebugExceptions\", false); };\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity {LoggingSeverity} - The severity of the log message\r\n             * @param message {_InternalLogMessage} - The log message.\r\n             */\r\n            _self.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n                if (isUserAct === void 0) { isUserAct = false; }\r\n                var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n                if (_self.enableDebugExceptions()) {\r\n                    throw message;\r\n                }\r\n                else {\r\n                    // Get the logging function and fallback to warnToConsole of for some reason errorToConsole doesn't exist\r\n                    var logFunc = severity === LoggingSeverity.CRITICAL ? strErrorToConsole : strWarnToConsole;\r\n                    if (!isUndefined(message.message)) {\r\n                        var logLevel = _self.consoleLoggingLevel();\r\n                        if (isUserAct) {\r\n                            // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                            var messageKey = +message.messageId;\r\n                            if (!_messageLogged[messageKey] && logLevel >= severity) {\r\n                                _self[logFunc](message.message);\r\n                                _messageLogged[messageKey] = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Only log traces if the console Logging Level is >= the throwInternal severity level\r\n                            if (logLevel >= severity) {\r\n                                _self[logFunc](message.message);\r\n                            }\r\n                        }\r\n                        _self.logInternalMessage(severity, message);\r\n                    }\r\n                    else {\r\n                        _debugExtMsg(\"throw\" + (severity === LoggingSeverity.CRITICAL ? \"Critical\" : \"Warning\"), message);\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             * This will write a warning to the console if possible\r\n             * @param message {string} - The warning message\r\n             */\r\n            _self.warnToConsole = function (message) {\r\n                _logToConsole(\"warn\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            /**\r\n             * This will write an error to the console if possible\r\n             * @param message {string} - The error message\r\n             */\r\n            _self.errorToConsole = function (message) {\r\n                _logToConsole(\"error\", message);\r\n                _debugExtMsg(\"error\", message);\r\n            };\r\n            /**\r\n             * Resets the internal message count\r\n             */\r\n            _self.resetInternalMessageCount = function () {\r\n                _messageCount = 0;\r\n                _messageLogged = {};\r\n            };\r\n            /**\r\n             * Logs a message to the internal queue.\r\n             * @param severity {LoggingSeverity} - The severity of the log message\r\n             * @param message {_InternalLogMessage} - The message to log.\r\n             */\r\n            _self.logInternalMessage = function (severity, message) {\r\n                if (_areInternalMessagesThrottled()) {\r\n                    return;\r\n                }\r\n                // check if this message type was already logged for this session and if so, don't log it again\r\n                var logMessage = true;\r\n                var messageKey = AIInternalMessagePrefix + message.messageId;\r\n                // if the session storage is not available, limit to only one message type per page view\r\n                if (_messageLogged[messageKey]) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    _messageLogged[messageKey] = true;\r\n                }\r\n                if (logMessage) {\r\n                    // Push the event in the internal queue\r\n                    if (severity <= _self.telemetryLoggingLevel()) {\r\n                        _self.queue.push(message);\r\n                        _messageCount++;\r\n                        _debugExtMsg((severity === LoggingSeverity.CRITICAL ? \"error\" : \"warn\"), message);\r\n                    }\r\n                    // When throttle limit reached, send a special event\r\n                    if (_messageCount === _self.maxInternalMessageLimit()) {\r\n                        var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                        var throttleMessage = new _InternalLogMessage(_InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                        _self.queue.push(throttleMessage);\r\n                        if (severity === LoggingSeverity.CRITICAL) {\r\n                            _self.errorToConsole(throttleLimitMessage);\r\n                        }\r\n                        else {\r\n                            _self.warnToConsole(throttleLimitMessage);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            function _getConfigValue(name, defValue) {\r\n                var value = config[name];\r\n                if (!isNullOrUndefined(value)) {\r\n                    return value;\r\n                }\r\n                return defValue;\r\n            }\r\n            function _areInternalMessagesThrottled() {\r\n                return _messageCount >= _self.maxInternalMessageLimit();\r\n            }\r\n            function _debugExtMsg(name, data) {\r\n                var dbgExt = getDebugExt(config);\r\n                if (dbgExt && dbgExt.diagLog) {\r\n                    dbgExt.diagLog(name, data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for DiagnosticLogger.prototype.enableDebugExceptions.\r\n// Removed Stub for DiagnosticLogger.prototype.consoleLoggingLevel.\r\n// Removed Stub for DiagnosticLogger.prototype.telemetryLoggingLevel.\r\n// Removed Stub for DiagnosticLogger.prototype.maxInternalMessageLimit.\r\n// Removed Stub for DiagnosticLogger.prototype.throwInternal.\r\n// Removed Stub for DiagnosticLogger.prototype.warnToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.errorToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.resetInternalMessageCount.\r\n// Removed Stub for DiagnosticLogger.prototype.logInternalMessage.\r\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\n//# sourceMappingURL=DiagnosticLogger.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dateNow, isArray, isFunction, objDefineAccessors } from \"./HelperFuncs\";\r\nvar strExecutionContextKey = \"ctx\";\r\nvar _defaultPerfManager = null;\r\nvar PerfEvent = /** @class */ (function () {\r\n    function PerfEvent(name, payloadDetails, isAsync) {\r\n        var _self = this;\r\n        var accessorDefined = false;\r\n        _self.start = dateNow();\r\n        _self.name = name;\r\n        _self.isAsync = isAsync;\r\n        _self.isChildEvt = function () { return false; };\r\n        if (isFunction(payloadDetails)) {\r\n            // Create an accessor to minimize the potential performance impact of executing the payloadDetails callback\r\n            var theDetails_1;\r\n            accessorDefined = objDefineAccessors(_self, \"payload\", function () {\r\n                // Delay the execution of the payloadDetails until needed\r\n                if (!theDetails_1 && isFunction(payloadDetails)) {\r\n                    theDetails_1 = payloadDetails();\r\n                    // clear it out now so the referenced objects can be garbage collected\r\n                    payloadDetails = null;\r\n                }\r\n                return theDetails_1;\r\n            });\r\n        }\r\n        _self.getCtx = function (key) {\r\n            if (key) {\r\n                // The parent and child links are located directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent.ParentContextKey || key === PerfEvent.ChildrenContextKey) {\r\n                    return _self[key];\r\n                }\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            }\r\n            return null;\r\n        };\r\n        _self.setCtx = function (key, value) {\r\n            if (key) {\r\n                // Put the parent and child links directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent.ParentContextKey) {\r\n                    // Simple assumption, if we are setting a parent then we must be a child\r\n                    if (!_self[key]) {\r\n                        _self.isChildEvt = function () { return true; };\r\n                    }\r\n                    _self[key] = value;\r\n                }\r\n                else if (key === PerfEvent.ChildrenContextKey) {\r\n                    _self[key] = value;\r\n                }\r\n                else {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            }\r\n        };\r\n        _self.complete = function () {\r\n            var childTime = 0;\r\n            var childEvts = _self.getCtx(PerfEvent.ChildrenContextKey);\r\n            if (isArray(childEvts)) {\r\n                for (var lp = 0; lp < childEvts.length; lp++) {\r\n                    var childEvt = childEvts[lp];\r\n                    if (childEvt) {\r\n                        childTime += childEvt.time;\r\n                    }\r\n                }\r\n            }\r\n            _self.time = dateNow() - _self.start;\r\n            _self.exTime = _self.time - childTime;\r\n            _self.complete = function () { };\r\n            if (!accessorDefined && isFunction(payloadDetails)) {\r\n                // If we couldn't define the property set during complete -- to minimize the perf impact until after the time\r\n                _self.payload = payloadDetails();\r\n            }\r\n        };\r\n    }\r\n    PerfEvent.ParentContextKey = \"parent\";\r\n    PerfEvent.ChildrenContextKey = \"childEvts\";\r\n    return PerfEvent;\r\n}());\r\nexport { PerfEvent };\r\nvar PerfManager = /** @class */ (function () {\r\n    function PerfManager(manager) {\r\n        /**\r\n         * General bucket used for execution context set and retrieved via setCtx() and getCtx.\r\n         * Defined as private so it can be visualized via the DebugPlugin\r\n         */\r\n        this.ctx = {};\r\n        dynamicProto(PerfManager, this, function (_self) {\r\n            _self.create = function (src, payloadDetails, isAsync) {\r\n                // TODO (@MSNev): at some point we will want to add additional configuration to \"select\" which events to instrument\r\n                // for now this is just a simple do everything.\r\n                return new PerfEvent(src, payloadDetails, isAsync);\r\n            };\r\n            _self.fire = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    perfEvent.complete();\r\n                    if (manager && isFunction(manager.perfEvent)) {\r\n                        manager.perfEvent(perfEvent);\r\n                    }\r\n                }\r\n            };\r\n            _self.setCtx = function (key, value) {\r\n                if (key) {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            };\r\n            _self.getCtx = function (key) {\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PerfManager.prototype.create.\r\n// Removed Stub for PerfManager.prototype.fire.\r\n// Removed Stub for PerfManager.prototype.setCtx.\r\n// Removed Stub for PerfManager.prototype.getCtx.\r\n    return PerfManager;\r\n}());\r\nexport { PerfManager };\r\nvar doPerfActiveKey = \"CoreUtils.doPerf\";\r\n/**\r\n * Helper function to wrap a function with a perf event\r\n * @param mgrSource - The Performance Manager or a Performance provider source (may be null)\r\n * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)\r\n * @param func - The function to call and measure\r\n * @param details - A function to return the payload details\r\n * @param isAsync - Is the event / function being call asynchronously or synchronously\r\n */\r\nexport function doPerf(mgrSource, getSource, func, details, isAsync) {\r\n    if (mgrSource) {\r\n        var perfMgr = mgrSource;\r\n        if (isFunction(perfMgr[\"getPerfMgr\"])) {\r\n            // Looks like a perf manager provider object\r\n            perfMgr = perfMgr[\"getPerfMgr\"]();\r\n        }\r\n        if (perfMgr) {\r\n            var perfEvt = void 0;\r\n            var currentActive = perfMgr.getCtx(doPerfActiveKey);\r\n            try {\r\n                perfEvt = perfMgr.create(getSource(), details, isAsync);\r\n                if (perfEvt) {\r\n                    if (currentActive && perfEvt.setCtx) {\r\n                        perfEvt.setCtx(PerfEvent.ParentContextKey, currentActive);\r\n                        if (currentActive.getCtx && currentActive.setCtx) {\r\n                            var children = currentActive.getCtx(PerfEvent.ChildrenContextKey);\r\n                            if (!children) {\r\n                                children = [];\r\n                                currentActive.setCtx(PerfEvent.ChildrenContextKey, children);\r\n                            }\r\n                            children.push(perfEvt);\r\n                        }\r\n                    }\r\n                    // Set this event as the active event now\r\n                    perfMgr.setCtx(doPerfActiveKey, perfEvt);\r\n                    return func(perfEvt);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                if (perfEvt && perfEvt.setCtx) {\r\n                    perfEvt.setCtx(\"exception\", ex);\r\n                }\r\n            }\r\n            finally {\r\n                // fire the perf event\r\n                if (perfEvt) {\r\n                    perfMgr.fire(perfEvt);\r\n                }\r\n                // Reset the active event to the previous value\r\n                perfMgr.setCtx(doPerfActiveKey, currentActive);\r\n            }\r\n        }\r\n    }\r\n    return func();\r\n}\r\n/**\r\n * Set the global performance manager to use when there is no core instance or it has not been initialized yet.\r\n * @param perfManager - The IPerfManager instance to use when no performance manager is supplied.\r\n */\r\nexport function setGblPerfMgr(perfManager) {\r\n    _defaultPerfManager = perfManager;\r\n}\r\n/**\r\n * Get the current global performance manager that will be used with no performance manager is supplied.\r\n * @returns - The current default manager\r\n */\r\nexport function getGblPerfMgr() {\r\n    return _defaultPerfManager;\r\n}\r\n//# sourceMappingURL=PerfManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { doPerf } from \"./PerfManager\";\r\nimport { LoggingSeverity, _InternalMessageId } from \"../JavaScriptSDK.Enums/LoggingEnums\";\r\nimport { isFunction } from \"./HelperFuncs\";\r\nimport { dumpObj } from \"./EnvUtils\";\r\nvar TelemetryPluginChain = /** @class */ (function () {\r\n    function TelemetryPluginChain(plugin, defItemCtx) {\r\n        var _self = this;\r\n        var _nextProxy = null;\r\n        var _hasProcessTelemetry = isFunction(plugin.processTelemetry);\r\n        var _hasSetNext = isFunction(plugin.setNextPlugin);\r\n        _self._hasRun = false;\r\n        _self.getPlugin = function () {\r\n            return plugin;\r\n        };\r\n        _self.getNext = function () {\r\n            return _nextProxy;\r\n        };\r\n        _self.setNext = function (nextPlugin) {\r\n            _nextProxy = nextPlugin;\r\n        };\r\n        _self.processTelemetry = function (env, itemCtx) {\r\n            if (!itemCtx) {\r\n                // Looks like a plugin didn't pass the (optional) context, so restore to the default\r\n                itemCtx = defItemCtx;\r\n            }\r\n            var identifier = plugin ? plugin.identifier : \"TelemetryPluginChain\";\r\n            doPerf(itemCtx ? itemCtx.core() : null, function () { return identifier + \":processTelemetry\"; }, function () {\r\n                if (plugin && _hasProcessTelemetry) {\r\n                    _self._hasRun = true;\r\n                    try {\r\n                        // Ensure that we keep the context in sync (for processNext()), just in case a plugin\r\n                        // doesn't calls processTelemetry() instead of itemContext.processNext() or some\r\n                        // other form of error occurred\r\n                        itemCtx.setNext(_nextProxy);\r\n                        if (_hasSetNext) {\r\n                            // Backward compatibility setting the next plugin on the instance\r\n                            plugin.setNextPlugin(_nextProxy);\r\n                        }\r\n                        // Set a flag on the next plugin so we know if it was attempted to be executed\r\n                        _nextProxy && (_nextProxy._hasRun = false);\r\n                        plugin.processTelemetry(env, itemCtx);\r\n                    }\r\n                    catch (error) {\r\n                        var hasRun = _nextProxy && _nextProxy._hasRun;\r\n                        if (!_nextProxy || !hasRun) {\r\n                            // Either we have no next plugin or the current one did not attempt to call the next plugin\r\n                            // Which means the current one is the root of the failure so log/report this failure\r\n                            itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.PluginException, \"Plugin [\" + plugin.identifier + \"] failed during processTelemetry - \" + dumpObj(error));\r\n                        }\r\n                        if (_nextProxy && !hasRun) {\r\n                            // As part of the failure the current plugin did not attempt to call the next plugin in the cahin\r\n                            // So rather than leave the pipeline dead in the water we call the next plugin\r\n                            _nextProxy.processTelemetry(env, itemCtx);\r\n                        }\r\n                    }\r\n                }\r\n                else if (_nextProxy) {\r\n                    _self._hasRun = true;\r\n                    // The underlying plugin is either not defined or does not have a processTelemetry implementation\r\n                    // so we still want the next plugin to be executed.\r\n                    _nextProxy.processTelemetry(env, itemCtx);\r\n                }\r\n            }, function () { return ({ item: env }); }, !(env.sync));\r\n        };\r\n    }\r\n    return TelemetryPluginChain;\r\n}());\r\nexport { TelemetryPluginChain };\r\n//# sourceMappingURL=TelemetryPluginChain.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { TelemetryPluginChain } from \"./TelemetryPluginChain\";\r\nimport { arrForEach, isFunction, isNullOrUndefined, isUndefined } from \"./HelperFuncs\";\r\n/**\r\n * Creates the instance execution chain for the plugins\r\n */\r\nfunction _createProxyChain(plugins, itemCtx) {\r\n    var proxies = [];\r\n    if (plugins && plugins.length > 0) {\r\n        // Create the proxies and wire up the next plugin chain\r\n        var lastProxy = null;\r\n        for (var idx = 0; idx < plugins.length; idx++) {\r\n            var thePlugin = plugins[idx];\r\n            if (thePlugin && isFunction(thePlugin.processTelemetry)) {\r\n                // Only add plugins that are processors\r\n                var newProxy = new TelemetryPluginChain(thePlugin, itemCtx);\r\n                proxies.push(newProxy);\r\n                if (lastProxy) {\r\n                    // Set this new proxy as the next for the previous one\r\n                    lastProxy.setNext(newProxy);\r\n                }\r\n                lastProxy = newProxy;\r\n            }\r\n        }\r\n    }\r\n    return proxies.length > 0 ? proxies[0] : null;\r\n}\r\nfunction _copyProxyChain(proxy, itemCtx, startAt) {\r\n    var plugins = [];\r\n    var add = startAt ? false : true;\r\n    if (proxy) {\r\n        while (proxy) {\r\n            var thePlugin = proxy.getPlugin();\r\n            if (add || thePlugin === startAt) {\r\n                add = true;\r\n                plugins.push(thePlugin);\r\n            }\r\n            proxy = proxy.getNext();\r\n        }\r\n    }\r\n    if (!add) {\r\n        plugins.push(startAt);\r\n    }\r\n    return _createProxyChain(plugins, itemCtx);\r\n}\r\nfunction _copyPluginChain(srcPlugins, itemCtx, startAt) {\r\n    var plugins = srcPlugins;\r\n    var add = false;\r\n    if (startAt && srcPlugins) {\r\n        plugins = [];\r\n        arrForEach(srcPlugins, function (thePlugin) {\r\n            if (add || thePlugin === startAt) {\r\n                add = true;\r\n                plugins.push(thePlugin);\r\n            }\r\n        });\r\n    }\r\n    if (startAt && !add) {\r\n        if (!plugins) {\r\n            plugins = [];\r\n        }\r\n        plugins.push(startAt);\r\n    }\r\n    return _createProxyChain(plugins, itemCtx);\r\n}\r\nvar ProcessTelemetryContext = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n     * @param plugins - The plugin instances that will be executed\r\n     * @param config - The current config\r\n     * @param core - The current core instance\r\n     */\r\n    function ProcessTelemetryContext(plugins, config, core, startAt) {\r\n        var _self = this;\r\n        var _nextProxy = null; // Null == No next plugin\r\n        // There is no next element (null) vs not defined (undefined)\r\n        if (startAt !== null) {\r\n            if (plugins && isFunction(plugins.getPlugin)) {\r\n                // We have a proxy chain object\r\n                _nextProxy = _copyProxyChain(plugins, _self, startAt || plugins.getPlugin());\r\n            }\r\n            else {\r\n                // We just have an array\r\n                if (startAt) {\r\n                    _nextProxy = _copyPluginChain(plugins, _self, startAt);\r\n                }\r\n                else if (isUndefined(startAt)) {\r\n                    // Undefined means copy the existing chain\r\n                    _nextProxy = _createProxyChain(plugins, _self);\r\n                }\r\n            }\r\n        }\r\n        _self.core = function () {\r\n            return core;\r\n        };\r\n        _self.diagLog = function () {\r\n            return safeGetLogger(core, config);\r\n        };\r\n        _self.getCfg = function () {\r\n            return config;\r\n        };\r\n        _self.getExtCfg = function (identifier, defaultValue) {\r\n            if (defaultValue === void 0) { defaultValue = {}; }\r\n            var theConfig;\r\n            if (config) {\r\n                var extConfig = config.extensionConfig;\r\n                if (extConfig && identifier) {\r\n                    theConfig = extConfig[identifier];\r\n                }\r\n            }\r\n            return (theConfig ? theConfig : defaultValue);\r\n        };\r\n        _self.getConfig = function (identifier, field, defaultValue) {\r\n            if (defaultValue === void 0) { defaultValue = false; }\r\n            var theValue;\r\n            var extConfig = _self.getExtCfg(identifier, null);\r\n            if (extConfig && !isNullOrUndefined(extConfig[field])) {\r\n                theValue = extConfig[field];\r\n            }\r\n            else if (config && !isNullOrUndefined(config[field])) {\r\n                theValue = config[field];\r\n            }\r\n            return !isNullOrUndefined(theValue) ? theValue : defaultValue;\r\n        };\r\n        _self.hasNext = function () {\r\n            return _nextProxy != null;\r\n        };\r\n        _self.getNext = function () {\r\n            return _nextProxy;\r\n        };\r\n        _self.setNext = function (nextPlugin) {\r\n            _nextProxy = nextPlugin;\r\n        };\r\n        _self.processNext = function (env) {\r\n            var nextPlugin = _nextProxy;\r\n            if (nextPlugin) {\r\n                // Automatically move to the next plugin\r\n                _nextProxy = nextPlugin.getNext();\r\n                nextPlugin.processTelemetry(env, _self);\r\n            }\r\n        };\r\n        _self.createNew = function (plugins, startAt) {\r\n            if (plugins === void 0) { plugins = null; }\r\n            return new ProcessTelemetryContext(plugins || _nextProxy, config, core, startAt);\r\n        };\r\n    }\r\n    return ProcessTelemetryContext;\r\n}());\r\nexport { ProcessTelemetryContext };\r\n//# sourceMappingURL=ProcessTelemetryContext.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { ProcessTelemetryContext } from \"./ProcessTelemetryContext\";\r\nimport { isFunction, isNullOrUndefined, setValue } from \"./HelperFuncs\";\r\nimport { strExtensionConfig } from \"./Constants\";\r\nvar strGetPlugin = \"getPlugin\";\r\n/**\r\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins\r\n * can avoid implementation the same set of boiler plate code as well as provide a base\r\n * implementation so that new default implementations can be added without breaking all plugins.\r\n */\r\nvar BaseTelemetryPlugin = /** @class */ (function () {\r\n    function BaseTelemetryPlugin() {\r\n        var _self = this;\r\n        var _isinitialized = false;\r\n        var _rootCtx = null; // Used as the root context, holding the current config and initialized core\r\n        var _nextPlugin = null; // Used for backward compatibility where plugins don't call the main pipeline\r\n        _self.core = null;\r\n        _self.diagLog = function (itemCtx) {\r\n            return _self._getTelCtx(itemCtx).diagLog();\r\n        };\r\n        _self.isInitialized = function () {\r\n            return _isinitialized;\r\n        };\r\n        _self.setInitialized = function (isInitialized) {\r\n            _isinitialized = isInitialized;\r\n        };\r\n        // _self.getNextPlugin = () => DO NOT IMPLEMENT\r\n        // Sub-classes of this base class *should* not be relying on this value and instead\r\n        // should use processNext() function. If you require access to the plugin use the\r\n        // IProcessTelemetryContext.getNext().getPlugin() while in the pipeline, Note getNext() may return null.\r\n        _self.setNextPlugin = function (next) {\r\n            _nextPlugin = next;\r\n        };\r\n        _self.processNext = function (env, itemCtx) {\r\n            if (itemCtx) {\r\n                // Normal core execution sequence\r\n                itemCtx.processNext(env);\r\n            }\r\n            else if (_nextPlugin && isFunction(_nextPlugin.processTelemetry)) {\r\n                // Looks like backward compatibility or out of band processing. And as it looks\r\n                // like a ITelemetryPlugin or ITelemetryPluginChain, just call processTelemetry\r\n                _nextPlugin.processTelemetry(env, null);\r\n            }\r\n        };\r\n        _self._getTelCtx = function (currentCtx) {\r\n            if (currentCtx === void 0) { currentCtx = null; }\r\n            var itemCtx = currentCtx;\r\n            if (!itemCtx) {\r\n                var rootCtx = _rootCtx || new ProcessTelemetryContext(null, {}, _self.core);\r\n                // tslint:disable-next-line: prefer-conditional-expression\r\n                if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                    // Looks like a chain object\r\n                    itemCtx = rootCtx.createNew(null, _nextPlugin[strGetPlugin]);\r\n                }\r\n                else {\r\n                    itemCtx = rootCtx.createNew(null, _nextPlugin);\r\n                }\r\n            }\r\n            return itemCtx;\r\n        };\r\n        _self._baseTelInit = function (config, core, extensions, pluginChain) {\r\n            if (config) {\r\n                // Make sure the extensionConfig exists\r\n                setValue(config, strExtensionConfig, [], null, isNullOrUndefined);\r\n            }\r\n            if (!pluginChain && core) {\r\n                // Get the first plugin from the core\r\n                pluginChain = core.getProcessTelContext().getNext();\r\n            }\r\n            var nextPlugin = _nextPlugin;\r\n            if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                // If it looks like a proxy/chain then get the plugin\r\n                nextPlugin = _nextPlugin[strGetPlugin]();\r\n            }\r\n            // Support legacy plugins where core was defined as a property\r\n            _self.core = core;\r\n            _rootCtx = new ProcessTelemetryContext(pluginChain, config, core, nextPlugin);\r\n            _isinitialized = true;\r\n        };\r\n    }\r\n    BaseTelemetryPlugin.prototype.initialize = function (config, core, extensions, pluginChain) {\r\n        this._baseTelInit(config, core, extensions, pluginChain);\r\n    };\r\n    return BaseTelemetryPlugin;\r\n}());\r\nexport { BaseTelemetryPlugin };\r\n//# sourceMappingURL=BaseTelemetryPlugin.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nexport var strIKey = \"iKey\";\r\nexport var strExtensionConfig = \"extensionConfig\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { _InternalMessageId, LoggingSeverity } from \"../JavaScriptSDK.Enums/LoggingEnums\";\r\nimport { dumpObj, getDocument, getLocation, getNavigator, isIE } from \"./EnvUtils\";\r\nimport { arrForEach, dateNow, getExceptionName, isFunction, isNotNullOrUndefined, isNullOrUndefined, isString, isTruthy, isUndefined, objForEachKey, setValue, strContains, strEndsWith, strTrim } from \"./HelperFuncs\";\r\nvar strToGMTString = \"toGMTString\";\r\nvar strToUTCString = \"toUTCString\";\r\nvar strCookie = \"cookie\";\r\nvar strExpires = \"expires\";\r\nvar strEnabled = \"enabled\";\r\nvar strIsCookieUseDisabled = \"isCookieUseDisabled\";\r\nvar strDisableCookiesUsage = \"disableCookiesUsage\";\r\nvar strConfigCookieMgr = \"_ckMgr\";\r\nvar strEmpty = \"\";\r\nvar _supportsCookies = null;\r\nvar _allowUaSameSite = null;\r\nvar _parsedCookieValue = null;\r\nvar _doc = getDocument();\r\nvar _cookieCache = {};\r\nvar _globalCookieConfig = {};\r\n/**\r\n * @ignore\r\n * DO NOT USE or export from the module, this is exposed as public to support backward compatibility of previous static utility methods only.\r\n * If you want to manager cookies either use the ICookieMgr available from the core instance via getCookieMgr() or create\r\n * your own instance of the CookieMgr and use that.\r\n * Using this directly for enabling / disabling cookie handling will not only affect your usage but EVERY user of cookies.\r\n * Example, if you are using a shared component that is also using Application Insights you will affect their cookie handling.\r\n * @param logger - The DiagnosticLogger to use for reporting errors.\r\n */\r\nexport function _gblCookieMgr(config, logger) {\r\n    // Stash the global instance against the BaseCookieMgr class\r\n    var inst = createCookieMgr[strConfigCookieMgr] || _globalCookieConfig[strConfigCookieMgr];\r\n    if (!inst) {\r\n        // Note: not using the getSetValue() helper as that would require always creating a temporary cookieMgr\r\n        // that ultimately is never used\r\n        inst = createCookieMgr[strConfigCookieMgr] = createCookieMgr(config, logger);\r\n        _globalCookieConfig[strConfigCookieMgr] = inst;\r\n    }\r\n    return inst;\r\n}\r\nfunction _isMgrEnabled(cookieMgr) {\r\n    if (cookieMgr) {\r\n        return cookieMgr.isEnabled();\r\n    }\r\n    return true;\r\n}\r\nfunction _createCookieMgrConfig(rootConfig) {\r\n    var cookieMgrCfg = rootConfig.cookieCfg = rootConfig.cookieCfg || {};\r\n    // Sets the values from the root config if not already present on the cookieMgrCfg\r\n    setValue(cookieMgrCfg, \"domain\", rootConfig.cookieDomain, isNotNullOrUndefined, isNullOrUndefined);\r\n    setValue(cookieMgrCfg, \"path\", rootConfig.cookiePath || \"/\", null, isNullOrUndefined);\r\n    if (isNullOrUndefined(cookieMgrCfg[strEnabled])) {\r\n        // Set the enabled from the provided setting or the legacy root values\r\n        var cookieEnabled = void 0;\r\n        if (!isUndefined(rootConfig[strIsCookieUseDisabled])) {\r\n            cookieEnabled = !rootConfig[strIsCookieUseDisabled];\r\n        }\r\n        if (!isUndefined(rootConfig[strDisableCookiesUsage])) {\r\n            cookieEnabled = !rootConfig[strDisableCookiesUsage];\r\n        }\r\n        cookieMgrCfg[strEnabled] = cookieEnabled;\r\n    }\r\n    return cookieMgrCfg;\r\n}\r\n/**\r\n * Helper to return the ICookieMgr from the core (if not null/undefined) or a default implementation\r\n * associated with the configuration or a legacy default.\r\n * @param core\r\n * @param config\r\n * @returns\r\n */\r\nexport function safeGetCookieMgr(core, config) {\r\n    var cookieMgr;\r\n    if (core) {\r\n        // Always returns an instance\r\n        cookieMgr = core.getCookieMgr();\r\n    }\r\n    else if (config) {\r\n        var cookieCfg = config.cookieCfg;\r\n        if (cookieCfg[strConfigCookieMgr]) {\r\n            cookieMgr = cookieCfg[strConfigCookieMgr];\r\n        }\r\n        else {\r\n            cookieMgr = createCookieMgr(config);\r\n        }\r\n    }\r\n    if (!cookieMgr) {\r\n        // Get or initialize the default global (legacy) cookie manager if we couldn't find one\r\n        cookieMgr = _gblCookieMgr(config, (core || {}).logger);\r\n    }\r\n    return cookieMgr;\r\n}\r\nexport function createCookieMgr(rootConfig, logger) {\r\n    var cookieMgrConfig = _createCookieMgrConfig(rootConfig || _globalCookieConfig);\r\n    var _path = cookieMgrConfig.path || \"/\";\r\n    var _domain = cookieMgrConfig.domain;\r\n    // Explicitly checking against false, so that setting to undefined will === true\r\n    var _enabled = cookieMgrConfig[strEnabled] !== false;\r\n    var cookieMgr = {\r\n        isEnabled: function () {\r\n            var enabled = _enabled && areCookiesSupported(logger);\r\n            // Using an indirect lookup for any global cookie manager to support tree shaking for SDK's\r\n            // that don't use the \"applicationinsights-core\" version of the default cookie function\r\n            var gblManager = _globalCookieConfig[strConfigCookieMgr];\r\n            if (enabled && gblManager && cookieMgr !== gblManager) {\r\n                // Make sure the GlobalCookie Manager instance (if not this instance) is also enabled.\r\n                // As the global (deprecated) functions may have been called (for backward compatibility)\r\n                enabled = _isMgrEnabled(gblManager);\r\n            }\r\n            return enabled;\r\n        },\r\n        setEnabled: function (value) {\r\n            // Explicitly checking against false, so that setting to undefined will === true\r\n            _enabled = value !== false;\r\n        },\r\n        set: function (name, value, maxAgeSec, domain, path) {\r\n            var result = false;\r\n            if (_isMgrEnabled(cookieMgr)) {\r\n                var values = {};\r\n                var theValue = strTrim(value || strEmpty);\r\n                var idx = theValue.indexOf(\";\");\r\n                if (idx !== -1) {\r\n                    theValue = strTrim(value.substring(0, idx));\r\n                    values = _extractParts(value.substring(idx + 1));\r\n                }\r\n                // Only update domain if not already present (isUndefined) and the value is truthy (not null, undefined or empty string)\r\n                setValue(values, \"domain\", domain || _domain, isTruthy, isUndefined);\r\n                if (!isNullOrUndefined(maxAgeSec)) {\r\n                    var _isIE = isIE();\r\n                    if (isUndefined(values[strExpires])) {\r\n                        var nowMs = dateNow();\r\n                        // Only add expires if not already present\r\n                        var expireMs = nowMs + (maxAgeSec * 1000);\r\n                        // Sanity check, if zero or -ve then ignore\r\n                        if (expireMs > 0) {\r\n                            var expiry = new Date();\r\n                            expiry.setTime(expireMs);\r\n                            setValue(values, strExpires, _formatDate(expiry, !_isIE ? strToUTCString : strToGMTString) || _formatDate(expiry, _isIE ? strToGMTString : strToUTCString) || strEmpty, isTruthy);\r\n                        }\r\n                    }\r\n                    if (!_isIE) {\r\n                        // Only replace if not already present\r\n                        setValue(values, \"max-age\", strEmpty + maxAgeSec, null, isUndefined);\r\n                    }\r\n                }\r\n                var location_1 = getLocation();\r\n                if (location_1 && location_1.protocol === \"https:\") {\r\n                    setValue(values, \"secure\", null, null, isUndefined);\r\n                    // Only set same site if not also secure\r\n                    if (_allowUaSameSite === null) {\r\n                        _allowUaSameSite = !uaDisallowsSameSiteNone((getNavigator() || {}).userAgent);\r\n                    }\r\n                    if (_allowUaSameSite) {\r\n                        setValue(values, \"SameSite\", \"None\", null, isUndefined);\r\n                    }\r\n                }\r\n                setValue(values, \"path\", path || _path, null, isUndefined);\r\n                var setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n                setCookieFn(name, _formatCookieValue(theValue, values));\r\n                result = true;\r\n            }\r\n            return result;\r\n        },\r\n        get: function (name) {\r\n            var value = strEmpty;\r\n            if (_isMgrEnabled(cookieMgr)) {\r\n                value = (cookieMgrConfig.getCookie || _getCookieValue)(name);\r\n            }\r\n            return value;\r\n        },\r\n        del: function (name, path) {\r\n            var result = false;\r\n            if (_isMgrEnabled(cookieMgr)) {\r\n                // Only remove the cookie if the manager and cookie support has not been disabled\r\n                result = cookieMgr.purge(name, path);\r\n            }\r\n            return result;\r\n        },\r\n        purge: function (name, path) {\r\n            var _a;\r\n            var result = false;\r\n            if (areCookiesSupported(logger)) {\r\n                // Setting the expiration date in the past immediately removes the cookie\r\n                var values = (_a = {},\r\n                    _a[\"path\"] = path ? path : \"/\",\r\n                    _a[strExpires] = \"Thu, 01 Jan 1970 00:00:01 GMT\",\r\n                    _a);\r\n                if (!isIE()) {\r\n                    // Set max age to expire now\r\n                    values[\"max-age\"] = \"0\";\r\n                }\r\n                var delCookie = cookieMgrConfig.delCookie || _setCookieValue;\r\n                delCookie(name, _formatCookieValue(strEmpty, values));\r\n                result = true;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    // Associated this cookie manager with the config\r\n    cookieMgr[strConfigCookieMgr] = cookieMgr;\r\n    return cookieMgr;\r\n}\r\n/*\r\n* Helper method to tell if document.cookie object is supported by the runtime\r\n*/\r\nexport function areCookiesSupported(logger) {\r\n    if (_supportsCookies === null) {\r\n        _supportsCookies = false;\r\n        try {\r\n            var doc = _doc || {};\r\n            _supportsCookies = doc[strCookie] !== undefined;\r\n        }\r\n        catch (e) {\r\n            logger && logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return _supportsCookies;\r\n}\r\nfunction _extractParts(theValue) {\r\n    var values = {};\r\n    if (theValue && theValue.length) {\r\n        var parts = strTrim(theValue).split(\";\");\r\n        arrForEach(parts, function (thePart) {\r\n            thePart = strTrim(thePart || strEmpty);\r\n            if (thePart) {\r\n                var idx = thePart.indexOf(\"=\");\r\n                if (idx === -1) {\r\n                    values[thePart] = null;\r\n                }\r\n                else {\r\n                    values[strTrim(thePart.substring(0, idx))] = strTrim(thePart.substring(idx + 1));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return values;\r\n}\r\nfunction _formatDate(theDate, func) {\r\n    if (isFunction(theDate[func])) {\r\n        return theDate[func]();\r\n    }\r\n    return null;\r\n}\r\nfunction _formatCookieValue(value, values) {\r\n    var cookieValue = value || strEmpty;\r\n    objForEachKey(values, function (name, theValue) {\r\n        cookieValue += \"; \" + name + (!isNullOrUndefined(theValue) ? \"=\" + theValue : strEmpty);\r\n    });\r\n    return cookieValue;\r\n}\r\nfunction _getCookieValue(name) {\r\n    var cookieValue = strEmpty;\r\n    if (_doc) {\r\n        var theCookie = _doc[strCookie] || strEmpty;\r\n        if (_parsedCookieValue !== theCookie) {\r\n            _cookieCache = _extractParts(theCookie);\r\n            _parsedCookieValue = theCookie;\r\n        }\r\n        cookieValue = strTrim(_cookieCache[name] || strEmpty);\r\n    }\r\n    return cookieValue;\r\n}\r\nfunction _setCookieValue(name, cookieValue) {\r\n    if (_doc) {\r\n        _doc[strCookie] = name + \"=\" + cookieValue;\r\n    }\r\n}\r\nexport function uaDisallowsSameSiteNone(userAgent) {\r\n    if (!isString(userAgent)) {\r\n        return false;\r\n    }\r\n    // Cover all iOS based browsers here. This includes:\r\n    // - Safari on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - WkWebview on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - Chrome on iOS 12 for iPhone, iPod Touch, iPad\r\n    // All of which are broken by SameSite=None, because they use the iOS networking stack\r\n    if (strContains(userAgent, \"CPU iPhone OS 12\") || strContains(userAgent, \"iPad; CPU OS 12\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X based browsers that use the Mac OS networking stack. This includes:\r\n    // - Safari on Mac OS X\r\n    // This does not include:\r\n    // - Internal browser on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strContains(userAgent, \"Version/\") && strContains(userAgent, \"Safari\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X internal browsers that use the Mac OS networking stack. This includes:\r\n    // - Internal browser on Mac OS X\r\n    // This does not include:\r\n    // - Safari on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strEndsWith(userAgent, \"AppleWebKit/605.1.15 (KHTML, like Gecko)\")) {\r\n        return true;\r\n    }\r\n    // Cover Chrome 50-69, because some versions are broken by SameSite=None, and none in this range require it.\r\n    // Note: this covers some pre-Chromium Edge versions, but pre-Chromim Edge does not require SameSite=None, so this is fine.\r\n    // Note: this regex applies to Windows, Mac OS X, and Linux, deliberately.\r\n    if (strContains(userAgent, \"Chrome/5\") || strContains(userAgent, \"Chrome/6\")) {\r\n        return true;\r\n    }\r\n    // Unreal Engine runs Chromium 59, but does not advertise as Chrome until 4.23. Treat versions of Unreal\r\n    // that don't specify their Chrome version as lacking support for SameSite=None.\r\n    if (strContains(userAgent, \"UnrealEngine\") && !strContains(userAgent, \"Chrome\")) {\r\n        return true;\r\n    }\r\n    // UCBrowser < 12.13.2 ignores Set-Cookie headers with SameSite=None\r\n    // NB: this rule isn't complete - you need regex to make a complete rule.\r\n    // See: https://www.chromium.org/updates/same-site/incompatible-clients\r\n    if (strContains(userAgent, \"UCBrowser/12\") || strContains(userAgent, \"UCBrowser/11\")) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=CookieMgr.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getCrypto, getMsCrypto, isIE } from \"./EnvUtils\";\r\nimport { dateNow } from \"./HelperFuncs\";\r\nvar UInt32Mask = 0x100000000;\r\nvar MaxUInt32 = 0xffffffff;\r\n// MWC based Random generator (for IE)\r\nvar _mwcSeeded = false;\r\nvar _mwcW = 123456789;\r\nvar _mwcZ = 987654321;\r\n// Takes any integer\r\nfunction _mwcSeed(seedValue) {\r\n    if (seedValue < 0) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        seedValue >>>= 0;\r\n    }\r\n    _mwcW = (123456789 + seedValue) & MaxUInt32;\r\n    _mwcZ = (987654321 - seedValue) & MaxUInt32;\r\n    _mwcSeeded = true;\r\n}\r\nfunction _autoSeedMwc() {\r\n    // Simple initialization using default Math.random() - So we inherit any entropy from the browser\r\n    // and bitwise XOR with the current milliseconds\r\n    try {\r\n        var now = dateNow() & 0x7fffffff;\r\n        _mwcSeed(((Math.random() * UInt32Mask) ^ now) + now);\r\n    }\r\n    catch (e) {\r\n        // Don't crash if something goes wrong\r\n    }\r\n}\r\n/**\r\n * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum.\r\n * So maxValue(16) will produce a number from 0..16 (range of 17)\r\n * @param maxValue\r\n */\r\nexport function randomValue(maxValue) {\r\n    if (maxValue > 0) {\r\n        return Math.floor((random32() / MaxUInt32) * (maxValue + 1)) >>> 0;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function random32(signed) {\r\n    var value;\r\n    var c = getCrypto() || getMsCrypto();\r\n    if (c && c.getRandomValues) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = c.getRandomValues(new Uint32Array(1))[0] & MaxUInt32;\r\n    }\r\n    else if (isIE()) {\r\n        // For IE 6, 7, 8 (especially on XP) Math.random is not very random\r\n        if (!_mwcSeeded) {\r\n            // Set the seed for the Mwc algorithm\r\n            _autoSeedMwc();\r\n        }\r\n        // Don't use Math.random for IE\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = mwcRandom32() & MaxUInt32;\r\n    }\r\n    else {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = Math.floor((UInt32Mask * Math.random()) | 0);\r\n    }\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Seed the MWC random number generator with the specified seed or a random value\r\n * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\r\n */\r\nexport function mwcRandomSeed(value) {\r\n    if (!value) {\r\n        _autoSeedMwc();\r\n    }\r\n    else {\r\n        _mwcSeed(value);\r\n    }\r\n}\r\n/**\r\n * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry)\r\n * instead of Math.random() defaults to un-signed.\r\n * Used as a replacement random generator for IE to avoid issues with older IE instances.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function mwcRandom32(signed) {\r\n    _mwcZ = (36969 * (_mwcZ & 0xFFFF) + (_mwcZ >> 16)) & MaxUInt32;\r\n    _mwcW = (18000 * (_mwcW & 0xFFFF) + (_mwcW >> 16)) & MaxUInt32;\r\n    var value = (((_mwcZ << 16) + (_mwcW & 0xFFFF)) >>> 0) & MaxUInt32 | 0;\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n//# sourceMappingURL=RandomHelper.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n/**\r\n * Type of storage to differentiate between local storage and session storage\r\n */\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\nexport var DistributedTracingModes;\r\n(function (DistributedTracingModes) {\r\n    /**\r\n     * (Default) Send Application Insights correlation headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI\"] = 0] = \"AI\";\r\n    /**\r\n     * Send both W3C Trace Context headers and back-compatibility Application Insights headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI_AND_W3C\"] = 1] = \"AI_AND_W3C\";\r\n    /**\r\n     * Send W3C Trace Context headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"W3C\"] = 2] = \"W3C\";\r\n})(DistributedTracingModes || (DistributedTracingModes = {}));\r\n//# sourceMappingURL=Enums.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { objCreateFn, strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { _gblCookieMgr } from \"./CookieMgr\";\r\nimport { getWindow, getDocument, getPerformance, isIE } from \"./EnvUtils\";\r\nimport { arrForEach, arrIndexOf, arrMap, arrReduce, attachEvent, dateNow, detachEvent, hasOwnProperty, isArray, isBoolean, isDate, isError, isFunction, isNullOrUndefined, isNumber, isObject, isString, isTypeof, isUndefined, objDefineAccessors, objKeys, strTrim, toISOString } from \"./HelperFuncs\";\r\nimport { randomValue, random32, mwcRandomSeed, mwcRandom32 } from \"./RandomHelper\";\r\nvar strVisibilityChangeEvt = \"visibilitychange\";\r\nvar strPageHide = \"pagehide\";\r\nvar strPageShow = \"pageshow\";\r\nvar _cookieMgrs = null;\r\nvar _canUseCookies; // legacy supported config\r\n// Added to help with minfication\r\nexport var Undefined = strShimUndefined;\r\n/**\r\n * Trys to add an event handler for the specified event to the window, body and document\r\n * @param eventName {string} - The name of the event\r\n * @param callback {any} - The callback function that needs to be executed for the given event\r\n * @return {boolean} - true if the handler was successfully added\r\n */\r\nexport function addEventHandler(eventName, callback) {\r\n    var result = false;\r\n    var w = getWindow();\r\n    if (w) {\r\n        result = attachEvent(w, eventName, callback);\r\n        result = attachEvent(w[\"body\"], eventName, callback) || result;\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        result = attachEvent(doc, eventName, callback) || result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events An string array of event names to bind the listener to\r\n * @param listener The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addEventListeners(events, listener, excludeEvents) {\r\n    var added = false;\r\n    if (listener && events && isArray(events)) {\r\n        var excluded_1 = [];\r\n        arrForEach(events, function (name) {\r\n            if (isString(name)) {\r\n                if (!excludeEvents || arrIndexOf(excludeEvents, name) === -1) {\r\n                    added = addEventHandler(name, listener) || added;\r\n                }\r\n                else {\r\n                    excluded_1.push(name);\r\n                }\r\n            }\r\n        });\r\n        if (!added && excluded_1.length > 0) {\r\n            // Failed to add any listeners and we excluded some, so just attempt to add the excluded events\r\n            added = addEventListeners(excluded_1, listener);\r\n        }\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Listen to the 'beforeunload', 'unload' and 'pagehide' events which indicates a page unload is occurring,\r\n * this does NOT listen to the 'visibilitychange' event as while it does indicate that the page is being hidden\r\n * it does not *necessarily* mean that the page is being completely unloaded, it can mean that the user is\r\n * just navigating to a different Tab and may come back (without unloading the page). As such you may also\r\n * need to listen to the 'addPageHideEventListener' and 'addPageShowEventListener' events.\r\n * @param listener - The event callback to call when a page unload event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked, unless no other events can be.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageUnloadEventListener(listener, excludeEvents) {\r\n    // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server\r\n    // As just hooking the window does not always fire (on chrome) for page navigation's.\r\n    return addEventListeners([\"beforeunload\", \"unload\", \"pagehide\"], listener, excludeEvents);\r\n}\r\n/**\r\n * Listen to the pagehide and visibility changing to 'hidden' events\r\n * @param listener - The event callback to call when a page hide event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * Suggestion: pass as true if you are also calling addPageUnloadEventListener as that also hooks pagehide\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageHideEventListener(listener, excludeEvents) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"hidden\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    var pageUnloadAdded = false;\r\n    if (!excludeEvents || arrIndexOf(excludeEvents, strPageHide) === -1) {\r\n        pageUnloadAdded = addEventHandler(strPageHide, listener);\r\n    }\r\n    if (!excludeEvents || arrIndexOf(excludeEvents, strVisibilityChangeEvt) === -1) {\r\n        pageUnloadAdded = addEventHandler(strVisibilityChangeEvt, _handlePageVisibility) || pageUnloadAdded;\r\n    }\r\n    if (!pageUnloadAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageUnloadAdded = addPageHideEventListener(listener);\r\n    }\r\n    return pageUnloadAdded;\r\n}\r\n/**\r\n * Listen to the pageshow and visibility changing to 'visible' events\r\n * @param listener - The event callback to call when a page is show event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageShowEventListener(listener, excludeEvents) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"visible\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    var pageShowAdded = false;\r\n    if (!excludeEvents || arrIndexOf(excludeEvents, strPageShow) === -1) {\r\n        pageShowAdded = addEventHandler(strPageShow, listener);\r\n    }\r\n    if (!excludeEvents || arrIndexOf(excludeEvents, strVisibilityChangeEvt) === -1) {\r\n        pageShowAdded = addEventHandler(strVisibilityChangeEvt, _handlePageVisibility) || pageShowAdded;\r\n    }\r\n    if (!pageShowAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageShowAdded = addPageShowEventListener(listener);\r\n    }\r\n    return pageShowAdded;\r\n}\r\nexport function newGuid() {\r\n    function randomHexDigit() {\r\n        return randomValue(15); // Get a random value from 0..15\r\n    }\r\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(GuidRegex, function (c) {\r\n        var r = (randomHexDigit() | 0), v = (c === \"x\" ? r : r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\n/**\r\n * Return the current value of the Performance Api now() function (if available) and fallback to dateNow() if it is unavailable (IE9 or less)\r\n * https://caniuse.com/#search=performance.now\r\n */\r\nexport function perfNow() {\r\n    var perf = getPerformance();\r\n    if (perf && perf.now) {\r\n        return perf.now();\r\n    }\r\n    return dateNow();\r\n}\r\n/**\r\n * Generate random base64 id string.\r\n * The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\r\n * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\r\n */\r\nexport function newId(maxLength) {\r\n    if (maxLength === void 0) { maxLength = 22; }\r\n    var base64chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    // Start with an initial random number, consuming the value in reverse byte order\r\n    var number = random32() >>> 0; // Make sure it's a +ve number\r\n    var chars = 0;\r\n    var result = \"\";\r\n    while (result.length < maxLength) {\r\n        chars++;\r\n        result += base64chars.charAt(number & 0x3F);\r\n        number >>>= 6; // Zero fill with right shift\r\n        if (chars === 5) {\r\n            // 5 base64 characters === 30 bits so we don't have enough bits for another base64 char\r\n            // So add on another 30 bits and make sure it's +ve\r\n            number = (((random32() << 2) & 0xFFFFFFFF) | (number & 0x03)) >>> 0;\r\n            chars = 0; // We need to reset the number every 5 chars (30 bits)\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * The strEndsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.\r\n * @param value - The value to check whether it ends with the search value.\r\n * @param search - The characters to be searched for at the end of the value.\r\n * @returns true if the given search value is found at the end of the string, otherwise false.\r\n */\r\nexport function strEndsWith(value, search) {\r\n    if (value && search) {\r\n        var len = value.length;\r\n        var start = len - search.length;\r\n        return value.substring(start >= 0 ? start : 0, len) === search;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * generate W3C trace id\r\n */\r\nexport function generateW3CId() {\r\n    var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n    // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n    var oct = \"\", tmp;\r\n    for (var a = 0; a < 4; a++) {\r\n        tmp = random32();\r\n        oct +=\r\n            hexValues[tmp & 0xF] +\r\n                hexValues[tmp >> 4 & 0xF] +\r\n                hexValues[tmp >> 8 & 0xF] +\r\n                hexValues[tmp >> 12 & 0xF] +\r\n                hexValues[tmp >> 16 & 0xF] +\r\n                hexValues[tmp >> 20 & 0xF] +\r\n                hexValues[tmp >> 24 & 0xF] +\r\n                hexValues[tmp >> 28 & 0xF];\r\n    }\r\n    // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n    var clockSequenceHi = hexValues[8 + (random32() & 0x03) | 0];\r\n    return oct.substr(0, 8) + oct.substr(9, 4) + \"4\" + oct.substr(13, 3) + clockSequenceHi + oct.substr(16, 3) + oct.substr(19, 12);\r\n}\r\n/**\r\n * Provides a collection of utility functions, included for backward compatibility with previous releases.\r\n * @deprecated Marking this instance as deprecated in favor of direct usage of the helper functions\r\n * as direct usage provides better tree-shaking and minification by avoiding the inclusion of the unused items\r\n * in your resulting code.\r\n */\r\nexport var CoreUtils = {\r\n    _canUseCookies: undefined,\r\n    isTypeof: isTypeof,\r\n    isUndefined: isUndefined,\r\n    isNullOrUndefined: isNullOrUndefined,\r\n    hasOwnProperty: hasOwnProperty,\r\n    isFunction: isFunction,\r\n    isObject: isObject,\r\n    isDate: isDate,\r\n    isArray: isArray,\r\n    isError: isError,\r\n    isString: isString,\r\n    isNumber: isNumber,\r\n    isBoolean: isBoolean,\r\n    toISOString: toISOString,\r\n    arrForEach: arrForEach,\r\n    arrIndexOf: arrIndexOf,\r\n    arrMap: arrMap,\r\n    arrReduce: arrReduce,\r\n    strTrim: strTrim,\r\n    objCreate: objCreateFn,\r\n    objKeys: objKeys,\r\n    objDefineAccessors: objDefineAccessors,\r\n    addEventHandler: addEventHandler,\r\n    dateNow: dateNow,\r\n    isIE: isIE,\r\n    disableCookies: disableCookies,\r\n    newGuid: newGuid,\r\n    perfNow: perfNow,\r\n    newId: newId,\r\n    randomValue: randomValue,\r\n    random32: random32,\r\n    mwcRandomSeed: mwcRandomSeed,\r\n    mwcRandom32: mwcRandom32,\r\n    generateW3CId: generateW3CId\r\n};\r\nvar GuidRegex = /[xy]/g;\r\nexport var EventHelper = {\r\n    Attach: attachEvent,\r\n    AttachEvent: attachEvent,\r\n    Detach: detachEvent,\r\n    DetachEvent: detachEvent\r\n};\r\n/**\r\n * Helper to support backward compatibility for users that use the legacy cookie handling functions and the use the internal\r\n * CoreUtils._canUseCookies global flag to enable/disable cookies usage.\r\n * Note: This has the following deliberate side-effects\r\n * - Creates the global (legacy) cookie manager if it does not already exist\r\n * - Attempts to add \"listeners\" to the CoreUtils._canUseCookies property to support the legacy usage\r\n * @param config\r\n * @param logger\r\n * @returns\r\n */\r\nexport function _legacyCookieMgr(config, logger) {\r\n    var cookieMgr = _gblCookieMgr(config, logger);\r\n    var legacyCanUseCookies = CoreUtils._canUseCookies;\r\n    if (_cookieMgrs === null) {\r\n        _cookieMgrs = [];\r\n        _canUseCookies = legacyCanUseCookies;\r\n        // Dynamically create get/set property accessors for backward compatibility for enabling / disabling cookies\r\n        // this WILL NOT work for ES3 browsers (< IE8)\r\n        objDefineAccessors(CoreUtils, \"_canUseCookies\", function () {\r\n            return _canUseCookies;\r\n        }, function (value) {\r\n            _canUseCookies = value;\r\n            arrForEach(_cookieMgrs, function (mgr) {\r\n                mgr.setEnabled(value);\r\n            });\r\n        });\r\n    }\r\n    if (arrIndexOf(_cookieMgrs, cookieMgr) === -1) {\r\n        _cookieMgrs.push(cookieMgr);\r\n    }\r\n    if (isBoolean(legacyCanUseCookies)) {\r\n        cookieMgr.setEnabled(legacyCanUseCookies);\r\n    }\r\n    if (isBoolean(_canUseCookies)) {\r\n        cookieMgr.setEnabled(_canUseCookies);\r\n    }\r\n    return cookieMgr;\r\n}\r\n/**\r\n * @deprecated - Use the core.getCookieMgr().disable()\r\n * Force the SDK not to store and read any data from cookies.\r\n */\r\nexport function disableCookies() {\r\n    _legacyCookieMgr().setEnabled(false);\r\n}\r\n/**\r\n * @deprecated - Use the core.getCookieMgr().isEnabled()\r\n * Helper method to tell if document.cookie object is available and whether it can be used.\r\n */\r\nexport function canUseCookies(logger) {\r\n    return _legacyCookieMgr(null, logger).isEnabled();\r\n}\r\n/**\r\n * @deprecated - Use the core.getCookieMgr().get()\r\n * helper method to access userId and sessionId cookie\r\n */\r\nexport function getCookie(logger, name) {\r\n    return _legacyCookieMgr(null, logger).get(name);\r\n}\r\n/**\r\n * @deprecated - Use the core.getCookieMgr().set()\r\n * helper method to set userId and sessionId cookie\r\n */\r\nexport function setCookie(logger, name, value, domain) {\r\n    _legacyCookieMgr(null, logger).set(name, value, null, domain);\r\n}\r\n/**\r\n * @deprecated - Use the core.getCookieMgr().del()\r\n * Deletes a cookie by setting it's expiration time in the past.\r\n * @param name - The name of the cookie to delete.\r\n */\r\nexport function deleteCookie(logger, name) {\r\n    return _legacyCookieMgr(null, logger).del(name);\r\n}\r\n//# sourceMappingURL=CoreUtils.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { LoggingSeverity, _InternalMessageId, hasJSON, getJSON, objForEachKey, isObject, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nexport function dataSanitizeKeyAndAddUniqueness(logger, key, map) {\r\n    var origLength = key.length;\r\n    var field = dataSanitizeKey(logger, key);\r\n    // validation truncated the length.  We need to add uniqueness\r\n    if (field.length !== origLength) {\r\n        var i = 0;\r\n        var uniqueField = field;\r\n        while (map[uniqueField] !== undefined) {\r\n            i++;\r\n            uniqueField = field.substring(0, 150 /* MAX_NAME_LENGTH */ - 3) + dsPadNumber(i);\r\n        }\r\n        field = uniqueField;\r\n    }\r\n    return field;\r\n}\r\nexport function dataSanitizeKey(logger, name) {\r\n    var nameTrunc;\r\n    if (name) {\r\n        // Remove any leading or trailing whitespace\r\n        name = strTrim(name.toString());\r\n        // truncate the string to 150 chars\r\n        if (name.length > 150 /* MAX_NAME_LENGTH */) {\r\n            nameTrunc = name.substring(0, 150 /* MAX_NAME_LENGTH */);\r\n            logger && logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + 150 /* MAX_NAME_LENGTH */ + \" characters.\", { name: name }, true);\r\n        }\r\n    }\r\n    return nameTrunc || name;\r\n}\r\nexport function dataSanitizeString(logger, value, maxLength) {\r\n    if (maxLength === void 0) { maxLength = 1024 /* MAX_STRING_LENGTH */; }\r\n    var valueTrunc;\r\n    if (value) {\r\n        maxLength = maxLength ? maxLength : 1024 /* MAX_STRING_LENGTH */; // in case default parameters dont work\r\n        value = strTrim(value);\r\n        if (value.toString().length > maxLength) {\r\n            valueTrunc = value.toString().substring(0, maxLength);\r\n            logger && logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n        }\r\n    }\r\n    return valueTrunc || value;\r\n}\r\nexport function dataSanitizeUrl(logger, url) {\r\n    return dataSanitizeInput(logger, url, 2048 /* MAX_URL_LENGTH */, _InternalMessageId.UrlTooLong);\r\n}\r\nexport function dataSanitizeMessage(logger, message) {\r\n    var messageTrunc;\r\n    if (message) {\r\n        if (message.length > 32768 /* MAX_MESSAGE_LENGTH */) {\r\n            messageTrunc = message.substring(0, 32768 /* MAX_MESSAGE_LENGTH */);\r\n            logger && logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + 32768 /* MAX_MESSAGE_LENGTH */ + \" characters.\", { message: message }, true);\r\n        }\r\n    }\r\n    return messageTrunc || message;\r\n}\r\nexport function dataSanitizeException(logger, exception) {\r\n    var exceptionTrunc;\r\n    if (exception) {\r\n        // Make surte its a string\r\n        var value = \"\" + exception;\r\n        if (value.length > 32768 /* MAX_EXCEPTION_LENGTH */) {\r\n            exceptionTrunc = value.substring(0, 32768 /* MAX_EXCEPTION_LENGTH */);\r\n            logger && logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + 32768 /* MAX_EXCEPTION_LENGTH */ + \" characters.\", { exception: exception }, true);\r\n        }\r\n    }\r\n    return exceptionTrunc || exception;\r\n}\r\nexport function dataSanitizeProperties(logger, properties) {\r\n    if (properties) {\r\n        var tempProps_1 = {};\r\n        objForEachKey(properties, function (prop, value) {\r\n            if (isObject(value) && hasJSON()) {\r\n                // Stringify any part C properties\r\n                try {\r\n                    value = getJSON().stringify(value);\r\n                }\r\n                catch (e) {\r\n                    logger && logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                }\r\n            }\r\n            value = dataSanitizeString(logger, value, 8192 /* MAX_PROPERTY_LENGTH */);\r\n            prop = dataSanitizeKeyAndAddUniqueness(logger, prop, tempProps_1);\r\n            tempProps_1[prop] = value;\r\n        });\r\n        properties = tempProps_1;\r\n    }\r\n    return properties;\r\n}\r\nexport function dataSanitizeMeasurements(logger, measurements) {\r\n    if (measurements) {\r\n        var tempMeasurements_1 = {};\r\n        objForEachKey(measurements, function (measure, value) {\r\n            measure = dataSanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements_1);\r\n            tempMeasurements_1[measure] = value;\r\n        });\r\n        measurements = tempMeasurements_1;\r\n    }\r\n    return measurements;\r\n}\r\nexport function dataSanitizeId(logger, id) {\r\n    return id ? dataSanitizeInput(logger, id, 128 /* MAX_ID_LENGTH */, _InternalMessageId.IdTooLong).toString() : id;\r\n}\r\nexport function dataSanitizeInput(logger, input, maxLength, _msgId) {\r\n    var inputTrunc;\r\n    if (input) {\r\n        input = strTrim(input);\r\n        if (input.length > maxLength) {\r\n            inputTrunc = input.substring(0, maxLength);\r\n            logger && logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n        }\r\n    }\r\n    return inputTrunc || input;\r\n}\r\nexport function dsPadNumber(num) {\r\n    var s = \"00\" + num;\r\n    return s.substr(s.length - 3);\r\n}\r\n/**\r\n * Provides the DataSanitizer functions within the previous namespace.\r\n */\r\nexport var DataSanitizer = {\r\n    MAX_NAME_LENGTH: 150 /* MAX_NAME_LENGTH */,\r\n    MAX_ID_LENGTH: 128 /* MAX_ID_LENGTH */,\r\n    MAX_PROPERTY_LENGTH: 8192 /* MAX_PROPERTY_LENGTH */,\r\n    MAX_STRING_LENGTH: 1024 /* MAX_STRING_LENGTH */,\r\n    MAX_URL_LENGTH: 2048 /* MAX_URL_LENGTH */,\r\n    MAX_MESSAGE_LENGTH: 32768 /* MAX_MESSAGE_LENGTH */,\r\n    MAX_EXCEPTION_LENGTH: 32768 /* MAX_EXCEPTION_LENGTH */,\r\n    sanitizeKeyAndAddUniqueness: dataSanitizeKeyAndAddUniqueness,\r\n    sanitizeKey: dataSanitizeKey,\r\n    sanitizeString: dataSanitizeString,\r\n    sanitizeUrl: dataSanitizeUrl,\r\n    sanitizeMessage: dataSanitizeMessage,\r\n    sanitizeException: dataSanitizeException,\r\n    sanitizeProperties: dataSanitizeProperties,\r\n    sanitizeMeasurements: dataSanitizeMeasurements,\r\n    sanitizeId: dataSanitizeId,\r\n    sanitizeInput: dataSanitizeInput,\r\n    padNumber: dsPadNumber,\r\n    trim: strTrim\r\n};\r\n//# sourceMappingURL=DataSanitizer.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj, getExceptionName, getGlobal, getGlobalInst, isNullOrUndefined, LoggingSeverity, objForEachKey, _InternalMessageId } from \"@microsoft/applicationinsights-core-js\";\r\nimport { StorageType } from \"./Enums\";\r\nvar _canUseLocalStorage = undefined;\r\nvar _canUseSessionStorage = undefined;\r\n/**\r\n * Gets the localStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getLocalStorageObject() {\r\n    if (utlCanUseLocalStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n * @param storageType Type of storage\r\n * @return {Storage} Returns storage object verified that it is usable\r\n */\r\nfunction _getVerifiedStorageObject(storageType) {\r\n    try {\r\n        if (isNullOrUndefined(getGlobal())) {\r\n            return null;\r\n        }\r\n        var uid = new Date;\r\n        var storage = getGlobalInst(storageType === StorageType.LocalStorage ? \"localStorage\" : \"sessionStorage\");\r\n        storage.setItem(uid.toString(), uid.toString());\r\n        var fail = storage.getItem(uid.toString()) !== uid.toString();\r\n        storage.removeItem(uid.toString());\r\n        if (!fail) {\r\n            return storage;\r\n        }\r\n    }\r\n    catch (exception) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Gets the sessionStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getSessionStorageObject() {\r\n    if (utlCanUseSessionStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return null;\r\n}\r\nexport function utlDisableStorage() {\r\n    _canUseLocalStorage = false;\r\n    _canUseSessionStorage = false;\r\n}\r\nexport function utlCanUseLocalStorage() {\r\n    if (_canUseLocalStorage === undefined) {\r\n        _canUseLocalStorage = !!_getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return _canUseLocalStorage;\r\n}\r\nexport function utlGetLocalStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetLocalStorage(logger, name, data) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.removeItem(name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlCanUseSessionStorage() {\r\n    if (_canUseSessionStorage === undefined) {\r\n        _canUseSessionStorage = !!_getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return _canUseSessionStorage;\r\n}\r\nexport function utlGetSessionStorageKeys() {\r\n    var keys = [];\r\n    if (utlCanUseSessionStorage()) {\r\n        objForEachKey(getGlobalInst(\"sessionStorage\"), function (key) {\r\n            keys.push(key);\r\n        });\r\n    }\r\n    return keys;\r\n}\r\nexport function utlGetSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetSessionStorage(logger, name, data) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.removeItem(name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=StorageHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function () {\r\n    function EventData() {\r\n        /**\r\n         * Schema version\r\n         */\r\n        this.ver = 2;\r\n        /**\r\n         * Collection of custom properties.\r\n         */\r\n        this.properties = {};\r\n        /**\r\n         * Collection of custom measurements.\r\n         */\r\n        this.measurements = {};\r\n    }\r\n    return EventData;\r\n}());\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from \"./EventData\";\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    __extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Schema version\r\n         */\r\n        _this.ver = 2;\r\n        /**\r\n         * Collection of custom properties.\r\n         */\r\n        _this.properties = {};\r\n        /**\r\n         * Collection of custom measurements.\r\n         */\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport { PageViewData } from \"../Interfaces/Contracts/Generated/PageViewData\";\r\nimport { dataSanitizeId, dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { strNotSpecified } from \"../Constants\";\r\nvar PageView = /** @class */ (function (_super) {\r\n    __extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: 1 /* Required */,\r\n            name: 0 /* Default */,\r\n            url: 0 /* Default */,\r\n            duration: 0 /* Default */,\r\n            properties: 0 /* Default */,\r\n            measurements: 0 /* Default */,\r\n            id: 0 /* Default */\r\n        };\r\n        _this.id = dataSanitizeId(logger, id);\r\n        _this.url = dataSanitizeUrl(logger, url);\r\n        _this.name = dataSanitizeString(logger, name) || strNotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = dataSanitizeProperties(logger, properties);\r\n        _this.measurements = dataSanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, isString } from \"@microsoft/applicationinsights-core-js\";\r\nexport function stringToBoolOrDefault(str, defaultValue) {\r\n    if (defaultValue === void 0) { defaultValue = false; }\r\n    if (str === undefined || str === null) {\r\n        return defaultValue;\r\n    }\r\n    return str.toString().toLowerCase() === \"true\";\r\n}\r\n/**\r\n * Convert ms to c# time span format\r\n */\r\nexport function msToTimeSpan(totalms) {\r\n    if (isNaN(totalms) || totalms < 0) {\r\n        totalms = 0;\r\n    }\r\n    totalms = Math.round(totalms);\r\n    var ms = \"\" + totalms % 1000;\r\n    var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n    var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n    var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n    var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n    ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n    sec = sec.length < 2 ? \"0\" + sec : sec;\r\n    min = min.length < 2 ? \"0\" + min : min;\r\n    hour = hour.length < 2 ? \"0\" + hour : hour;\r\n    return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n}\r\nexport function getExtensionByName(extensions, identifier) {\r\n    var extension = null;\r\n    arrForEach(extensions, function (value) {\r\n        if (value.identifier === identifier) {\r\n            extension = value;\r\n            return -1;\r\n        }\r\n    });\r\n    return extension;\r\n}\r\nexport function isCrossOriginError(message, url, lineNumber, columnNumber, error) {\r\n    return !error && isString(message) && (message === \"Script error.\" || message === \"Script error\");\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n/**\r\n * This is an internal property used to cause internal (reporting) requests to be ignored from reporting\r\n * additional telemetry, to handle polyfil implementations ALL urls used with a disabled request will\r\n * also be ignored for future requests even when this property is not provided.\r\n * Tagging as Ignore as this is an internal value and is not expected to be used outside of the SDK\r\n * @ignore\r\n */\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\nexport var DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\nexport var strNotSpecified = \"not_specified\";\r\nexport var strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport { createClassFromInterface } from \"@microsoft/applicationinsights-core-js\";\r\nfunction _aiNameFunc(baseName) {\r\n    var aiName = \"ai.\" + baseName + \".\";\r\n    return function (name) {\r\n        return aiName + name;\r\n    };\r\n}\r\nvar _aiApplication = _aiNameFunc(\"application\");\r\nvar _aiDevice = _aiNameFunc(\"device\");\r\nvar _aiLocation = _aiNameFunc(\"location\");\r\nvar _aiOperation = _aiNameFunc(\"operation\");\r\nvar _aiSession = _aiNameFunc(\"session\");\r\nvar _aiUser = _aiNameFunc(\"user\");\r\nvar _aiCloud = _aiNameFunc(\"cloud\");\r\nvar _aiInternal = _aiNameFunc(\"internal\");\r\nvar ContextTagKeys = /** @class */ (function (_super) {\r\n    __extends(ContextTagKeys, _super);\r\n    function ContextTagKeys() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return ContextTagKeys;\r\n}(createClassFromInterface({\r\n    applicationVersion: _aiApplication(\"ver\"),\r\n    applicationBuild: _aiApplication(\"build\"),\r\n    applicationTypeId: _aiApplication(\"typeId\"),\r\n    applicationId: _aiApplication(\"applicationId\"),\r\n    applicationLayer: _aiApplication(\"layer\"),\r\n    deviceId: _aiDevice(\"id\"),\r\n    deviceIp: _aiDevice(\"ip\"),\r\n    deviceLanguage: _aiDevice(\"language\"),\r\n    deviceLocale: _aiDevice(\"locale\"),\r\n    deviceModel: _aiDevice(\"model\"),\r\n    deviceFriendlyName: _aiDevice(\"friendlyName\"),\r\n    deviceNetwork: _aiDevice(\"network\"),\r\n    deviceNetworkName: _aiDevice(\"networkName\"),\r\n    deviceOEMName: _aiDevice(\"oemName\"),\r\n    deviceOS: _aiDevice(\"os\"),\r\n    deviceOSVersion: _aiDevice(\"osVersion\"),\r\n    deviceRoleInstance: _aiDevice(\"roleInstance\"),\r\n    deviceRoleName: _aiDevice(\"roleName\"),\r\n    deviceScreenResolution: _aiDevice(\"screenResolution\"),\r\n    deviceType: _aiDevice(\"type\"),\r\n    deviceMachineName: _aiDevice(\"machineName\"),\r\n    deviceVMName: _aiDevice(\"vmName\"),\r\n    deviceBrowser: _aiDevice(\"browser\"),\r\n    deviceBrowserVersion: _aiDevice(\"browserVersion\"),\r\n    locationIp: _aiLocation(\"ip\"),\r\n    locationCountry: _aiLocation(\"country\"),\r\n    locationProvince: _aiLocation(\"province\"),\r\n    locationCity: _aiLocation(\"city\"),\r\n    operationId: _aiOperation(\"id\"),\r\n    operationName: _aiOperation(\"name\"),\r\n    operationParentId: _aiOperation(\"parentId\"),\r\n    operationRootId: _aiOperation(\"rootId\"),\r\n    operationSyntheticSource: _aiOperation(\"syntheticSource\"),\r\n    operationCorrelationVector: _aiOperation(\"correlationVector\"),\r\n    sessionId: _aiSession(\"id\"),\r\n    sessionIsFirst: _aiSession(\"isFirst\"),\r\n    sessionIsNew: _aiSession(\"isNew\"),\r\n    userAccountAcquisitionDate: _aiUser(\"accountAcquisitionDate\"),\r\n    userAccountId: _aiUser(\"accountId\"),\r\n    userAgent: _aiUser(\"userAgent\"),\r\n    userId: _aiUser(\"id\"),\r\n    userStoreRegion: _aiUser(\"storeRegion\"),\r\n    userAuthUserId: _aiUser(\"authUserId\"),\r\n    userAnonymousUserAcquisitionDate: _aiUser(\"anonUserAcquisitionDate\"),\r\n    userAuthenticatedUserAcquisitionDate: _aiUser(\"authUserAcquisitionDate\"),\r\n    cloudName: _aiCloud(\"name\"),\r\n    cloudRole: _aiCloud(\"role\"),\r\n    cloudRoleVer: _aiCloud(\"roleVer\"),\r\n    cloudRoleInstance: _aiCloud(\"roleInstance\"),\r\n    cloudEnvironment: _aiCloud(\"environment\"),\r\n    cloudLocation: _aiCloud(\"location\"),\r\n    cloudDeploymentUnit: _aiCloud(\"deploymentUnit\"),\r\n    internalNodeName: _aiInternal(\"nodeName\"),\r\n    internalSdkVersion: _aiInternal(\"sdkVersion\"),\r\n    internalAgentVersion: _aiInternal(\"agentVersion\"),\r\n    internalSnippet: _aiInternal(\"snippet\"),\r\n    internalSdkSrc: _aiInternal(\"sdkSrc\")\r\n})));\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { ContextTagKeys } from \"./Contracts/Generated/ContextTagKeys\";\r\nexport var Extensions = {\r\n    UserExt: \"user\",\r\n    DeviceExt: \"device\",\r\n    TraceExt: \"trace\",\r\n    WebExt: \"web\",\r\n    AppExt: \"app\",\r\n    OSExt: \"os\",\r\n    SessionExt: \"ses\",\r\n    SDKExt: \"sdk\"\r\n};\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _InternalMessageId, LoggingSeverity, safeGetCookieMgr, isFunction, newId, dumpObj, getExceptionName, dateNow, safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\r\nvar cookieNameConst = \"ai_session\";\r\nvar Session = /** @class */ (function () {\r\n    function Session() {\r\n    }\r\n    return Session;\r\n}());\r\nexport { Session };\r\nvar _SessionManager = /** @class */ (function () {\r\n    function _SessionManager(config, core) {\r\n        var self = this;\r\n        var _storageNamePrefix;\r\n        var _cookieUpdatedTimestamp;\r\n        var _logger = safeGetLogger(core);\r\n        var _cookieManager = safeGetCookieMgr(core);\r\n        dynamicProto(_SessionManager, self, function (_self) {\r\n            if (!config) {\r\n                config = {};\r\n            }\r\n            if (!isFunction(config.sessionExpirationMs)) {\r\n                config.sessionExpirationMs = function () { return _SessionManager.acquisitionSpan; };\r\n            }\r\n            if (!isFunction(config.sessionRenewalMs)) {\r\n                config.sessionRenewalMs = function () { return _SessionManager.renewalSpan; };\r\n            }\r\n            _self.config = config;\r\n            // sessionCookiePostfix takes the preference if it is configured, otherwise takes namePrefix if configured.\r\n            var sessionCookiePostfix = (_self.config.sessionCookiePostfix && _self.config.sessionCookiePostfix()) ?\r\n                _self.config.sessionCookiePostfix() :\r\n                ((_self.config.namePrefix && _self.config.namePrefix()) ? _self.config.namePrefix() : \"\");\r\n            _storageNamePrefix = function () { return cookieNameConst + sessionCookiePostfix; };\r\n            _self.automaticSession = new Session();\r\n            _self.update = function () {\r\n                // Always using Date getTime() as there is a bug in older IE instances that causes the performance timings to have the hi-bit set eg 0x800000000 causing\r\n                // the number to be incorrect.\r\n                var nowMs = dateNow();\r\n                var isExpired = false;\r\n                var session = _self.automaticSession;\r\n                if (!session.id) {\r\n                    isExpired = !_initializeAutomaticSession(session, nowMs);\r\n                }\r\n                var sessionExpirationMs = _self.config.sessionExpirationMs();\r\n                if (!isExpired && sessionExpirationMs > 0) {\r\n                    var sessionRenewalMs = _self.config.sessionRenewalMs();\r\n                    var timeSinceAcqMs = nowMs - session.acquisitionDate;\r\n                    var timeSinceRenewalMs = nowMs - session.renewalDate;\r\n                    isExpired = timeSinceAcqMs < 0 || timeSinceRenewalMs < 0; // expired if the acquisition or last renewal are in the future\r\n                    isExpired = isExpired || timeSinceAcqMs > sessionExpirationMs; // expired if the time since acquisition is more than session Expiration\r\n                    isExpired = isExpired || timeSinceRenewalMs > sessionRenewalMs; // expired if the time since last renewal is more than renewal period\r\n                }\r\n                // renew if acquisitionSpan or renewalSpan has elapsed\r\n                if (isExpired) {\r\n                    // update automaticSession so session state has correct id\r\n                    _renew(nowMs);\r\n                }\r\n                else {\r\n                    // do not update the cookie more often than cookieUpdateInterval\r\n                    if (!_cookieUpdatedTimestamp || nowMs - _cookieUpdatedTimestamp > _SessionManager.cookieUpdateInterval) {\r\n                        _setCookie(session, nowMs);\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             *  Record the current state of the automatic session and store it in our cookie string format\r\n             *  into the browser's local storage. This is used to restore the session data when the cookie\r\n             *  expires.\r\n             */\r\n            _self.backup = function () {\r\n                var session = _self.automaticSession;\r\n                _setStorage(session.id, session.acquisitionDate, session.renewalDate);\r\n            };\r\n            /**\r\n             * Use config.namePrefix + ai_session cookie data or local storage data (when the cookie is unavailable) to\r\n             * initialize the automatic session.\r\n             * @returns true if values set otherwise false\r\n             */\r\n            function _initializeAutomaticSession(session, now) {\r\n                var isValid = false;\r\n                var cookieValue = _cookieManager.get(_storageNamePrefix());\r\n                if (cookieValue && isFunction(cookieValue.split)) {\r\n                    isValid = _initializeAutomaticSessionWithData(session, cookieValue);\r\n                }\r\n                else {\r\n                    // There's no cookie, but we might have session data in local storage\r\n                    // This can happen if the session expired or the user actively deleted the cookie\r\n                    // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.\r\n                    // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.\r\n                    var storageValue = utlGetLocalStorage(_logger, _storageNamePrefix());\r\n                    if (storageValue) {\r\n                        isValid = _initializeAutomaticSessionWithData(session, storageValue);\r\n                    }\r\n                }\r\n                return isValid || !!session.id;\r\n            }\r\n            /**\r\n             * Extract id, acquisitionDate, and renewalDate from an ai_session payload string and\r\n             * use this data to initialize automaticSession.\r\n             *\r\n             * @param {string} sessionData - The string stored in an ai_session cookie or local storage backup\r\n             * @returns true if values set otherwise false\r\n             */\r\n            function _initializeAutomaticSessionWithData(session, sessionData) {\r\n                var isValid = false;\r\n                var sessionReset = \", session will be reset\";\r\n                var tokens = sessionData.split(\"|\");\r\n                if (tokens.length >= 2) {\r\n                    try {\r\n                        var acqMs = +tokens[1] || 0;\r\n                        var renewalMs = +tokens[2] || 0;\r\n                        if (isNaN(acqMs) || acqMs <= 0) {\r\n                            _logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionRenewalDateIsZero, \"AI session acquisition date is 0\" + sessionReset);\r\n                        }\r\n                        else if (isNaN(renewalMs) || renewalMs <= 0) {\r\n                            _logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionRenewalDateIsZero, \"AI session renewal date is 0\" + sessionReset);\r\n                        }\r\n                        else if (tokens[0]) {\r\n                            // Everything looks valid so set the values\r\n                            session.id = tokens[0];\r\n                            session.acquisitionDate = acqMs;\r\n                            session.renewalDate = renewalMs;\r\n                            isValid = true;\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        _logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ErrorParsingAISessionCookie, \"Error parsing ai_session value [\" + (sessionData || \"\") + \"]\" + sessionReset + \" - \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n                return isValid;\r\n            }\r\n            function _renew(nowMs) {\r\n                var theConfig = (_self.config || {});\r\n                var getNewId = (theConfig.getNewId ? theConfig.getNewId() : null) || newId;\r\n                _self.automaticSession.id = getNewId(theConfig.idLength ? theConfig.idLength() : 22);\r\n                _self.automaticSession.acquisitionDate = nowMs;\r\n                _setCookie(_self.automaticSession, nowMs);\r\n                // If this browser does not support local storage, fire an internal log to keep track of it at this point\r\n                if (!utlCanUseLocalStorage()) {\r\n                    _logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserDoesNotSupportLocalStorage, \"Browser does not support local storage. Session durations will be inaccurate.\");\r\n                }\r\n            }\r\n            function _setCookie(session, nowMs) {\r\n                var acq = session.acquisitionDate;\r\n                session.renewalDate = nowMs;\r\n                var config = _self.config;\r\n                var renewalPeriodMs = config.sessionRenewalMs();\r\n                // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner\r\n                // Expiring the cookie will cause the session to expire even if the user isn't on the page\r\n                var acqTimeLeftMs = (acq + config.sessionExpirationMs()) - nowMs;\r\n                var cookie = [session.id, acq, nowMs];\r\n                var maxAgeSec = 0;\r\n                if (acqTimeLeftMs < renewalPeriodMs) {\r\n                    maxAgeSec = acqTimeLeftMs / 1000;\r\n                }\r\n                else {\r\n                    maxAgeSec = renewalPeriodMs / 1000;\r\n                }\r\n                var cookieDomain = config.cookieDomain ? config.cookieDomain() : null;\r\n                // if sessionExpirationMs is set to 0, it means the expiry is set to 0 for this session cookie\r\n                // A cookie with 0 expiry in the session cookie will never expire for that browser session.  If the browser is closed the cookie expires.\r\n                // Depending on the browser, another instance does not inherit this cookie, however, another tab will\r\n                _cookieManager.set(_storageNamePrefix(), cookie.join(\"|\"), config.sessionExpirationMs() > 0 ? maxAgeSec : null, cookieDomain);\r\n                _cookieUpdatedTimestamp = nowMs;\r\n            }\r\n            function _setStorage(guid, acq, renewal) {\r\n                // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires\r\n                // Browsers that don't support local storage won't be able to end sessions cleanly from the client\r\n                // The server will notice this and end the sessions itself, with loss of accurate session duration\r\n                utlSetLocalStorage(_logger, _storageNamePrefix(), [guid, acq, renewal].join(\"|\"));\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for _SessionManager.prototype.update.\r\n// Removed Stub for _SessionManager.prototype.backup.\r\n    _SessionManager.acquisitionSpan = 86400000; // 24 hours in ms\r\n    _SessionManager.renewalSpan = 1800000; // 30 minutes in ms\r\n    _SessionManager.cookieUpdateInterval = 60000; // 1 minute in ms\r\n    return _SessionManager;\r\n}());\r\nexport { _SessionManager };\r\n//# sourceMappingURL=Session.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Application = /** @class */ (function () {\r\n    function Application() {\r\n    }\r\n    return Application;\r\n}());\r\nexport { Application };\r\n//# sourceMappingURL=Application.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Device = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the Device class\r\n     */\r\n    function Device() {\r\n        // don't attempt to fingerprint browsers\r\n        this.id = \"browser\";\r\n        // Device type is a dimension in our data platform\r\n        // Setting it to 'Browser' allows to separate client and server dependencies/exceptions\r\n        this.deviceClass = \"Browser\";\r\n    }\r\n    return Device;\r\n}());\r\nexport { Device };\r\n//# sourceMappingURL=Device.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Version = \"2.7.2\";\r\nvar Internal = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the internal telemetry data class.\r\n     */\r\n    function Internal(config) {\r\n        this.sdkVersion = (config.sdkExtension && config.sdkExtension() ? config.sdkExtension() + \"_\" : \"\") + \"javascript:\" + Version;\r\n    }\r\n    return Internal;\r\n}());\r\nexport { Internal };\r\n//# sourceMappingURL=Internal.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlRemoveStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _InternalMessageId, LoggingSeverity, safeGetCookieMgr, safeGetLogger, newId, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nfunction _validateUserInput(id) {\r\n    // Validate:\r\n    // 1. Id is a non-empty string.\r\n    // 2. It does not contain special characters for cookies.\r\n    if (typeof id !== \"string\" ||\r\n        !id ||\r\n        id.match(/,|;|=| |\\|/)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nvar User = /** @class */ (function () {\r\n    function User(config, core) {\r\n        /**\r\n         * A flag indicating whether this represents a new user\r\n         */\r\n        this.isNewUser = false;\r\n        /**\r\n         * A flag indicating whether the user cookie has been set\r\n         */\r\n        this.isUserCookieSet = false;\r\n        var _logger = safeGetLogger(core);\r\n        var _cookieManager = safeGetCookieMgr(core);\r\n        var _storageNamePrefix;\r\n        dynamicProto(User, this, function (_self) {\r\n            _self.config = config;\r\n            var userCookiePostfix = (_self.config.userCookiePostfix && _self.config.userCookiePostfix()) ? _self.config.userCookiePostfix() : \"\";\r\n            _storageNamePrefix = function () { return User.userCookieName + userCookiePostfix; };\r\n            // get userId or create new one if none exists\r\n            var cookie = _cookieManager.get(_storageNamePrefix());\r\n            if (cookie) {\r\n                _self.isNewUser = false;\r\n                var params = cookie.split(User.cookieSeparator);\r\n                if (params.length > 0) {\r\n                    _self.id = params[0];\r\n                    // we already have a cookie\r\n                    _self.isUserCookieSet = !!_self.id;\r\n                }\r\n            }\r\n            function _generateNewId() {\r\n                var theConfig = (config || {});\r\n                var getNewId = (theConfig.getNewId ? theConfig.getNewId() : null) || newId;\r\n                var id = getNewId(theConfig.idLength ? config.idLength() : 22);\r\n                return id;\r\n            }\r\n            function _generateNewCookie(userId) {\r\n                var acqStr = toISOString(new Date());\r\n                _self.accountAcquisitionDate = acqStr;\r\n                _self.isNewUser = true;\r\n                var newCookie = [userId, acqStr];\r\n                return newCookie;\r\n            }\r\n            function _setUserCookie(cookie) {\r\n                // without expiration, cookies expire at the end of the session\r\n                // set it to 365 days from now\r\n                // 365 * 24 * 60 * 60 = 31536000\r\n                var oneYear = 31536000;\r\n                _self.isUserCookieSet = _cookieManager.set(_storageNamePrefix(), cookie, oneYear);\r\n            }\r\n            if (!_self.id) {\r\n                _self.id = _generateNewId();\r\n                var newCookie = _generateNewCookie(_self.id);\r\n                _setUserCookie(newCookie.join(User.cookieSeparator));\r\n                // If we have an config.namePrefix() + ai_session in local storage this means the user actively removed our cookies.\r\n                // We should respect their wishes and clear ourselves from local storage\r\n                var name_1 = config.namePrefix && config.namePrefix() ? config.namePrefix() + \"ai_session\" : \"ai_session\";\r\n                utlRemoveStorage(_logger, name_1);\r\n            }\r\n            // We still take the account id from the ctor param for backward compatibility.\r\n            // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.\r\n            _self.accountId = config.accountId ? config.accountId() : undefined;\r\n            // Get the auth user id and account id from the cookie if exists\r\n            // Cookie is in the pattern: <authenticatedId>|<accountId>\r\n            var authCookie = _cookieManager.get(User.authUserCookieName);\r\n            if (authCookie) {\r\n                authCookie = decodeURI(authCookie);\r\n                var authCookieString = authCookie.split(User.cookieSeparator);\r\n                if (authCookieString[0]) {\r\n                    _self.authenticatedId = authCookieString[0];\r\n                }\r\n                if (authCookieString.length > 1 && authCookieString[1]) {\r\n                    _self.accountId = authCookieString[1];\r\n                }\r\n            }\r\n            _self.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n                if (storeInCookie === void 0) { storeInCookie = false; }\r\n                // Validate inputs to ensure no cookie control characters.\r\n                var isInvalidInput = !_validateUserInput(authenticatedUserId) || (accountId && !_validateUserInput(accountId));\r\n                if (isInvalidInput) {\r\n                    _logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SetAuthContextFailedAccountName, \"Setting auth user context failed. \" +\r\n                        \"User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.\", true);\r\n                    return;\r\n                }\r\n                // Create cookie string.\r\n                _self.authenticatedId = authenticatedUserId;\r\n                var authCookie = _self.authenticatedId;\r\n                if (accountId) {\r\n                    _self.accountId = accountId;\r\n                    authCookie = [_self.authenticatedId, _self.accountId].join(User.cookieSeparator);\r\n                }\r\n                if (storeInCookie) {\r\n                    // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).\r\n                    // Encoding the cookie to handle unexpected unicode characters.\r\n                    _cookieManager.set(User.authUserCookieName, encodeURI(authCookie));\r\n                }\r\n            };\r\n            /**\r\n             * Clears the authenticated user id and the account id from the user context.\r\n             * @returns {}\r\n             */\r\n            _self.clearAuthenticatedUserContext = function () {\r\n                _self.authenticatedId = null;\r\n                _self.accountId = null;\r\n                _cookieManager.del(User.authUserCookieName);\r\n            };\r\n            _self.update = function (userId) {\r\n                // Optimizations to avoid setting and processing the cookie when not needed\r\n                if (_self.id !== userId || !_self.isUserCookieSet) {\r\n                    var user_id = userId ? userId : _generateNewId();\r\n                    var user_cookie = _generateNewCookie(user_id);\r\n                    _setUserCookie(user_cookie.join(User.cookieSeparator));\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for User.prototype.setAuthenticatedUserContext.\r\n// Removed Stub for User.prototype.clearAuthenticatedUserContext.\r\n// Removed Stub for User.prototype.update.\r\n    User.cookieSeparator = \"|\";\r\n    User.userCookieName = \"ai_user\";\r\n    User.authUserCookieName = \"ai_authUser\";\r\n    return User;\r\n}());\r\nexport { User };\r\n//# sourceMappingURL=User.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Location = /** @class */ (function () {\r\n    function Location() {\r\n    }\r\n    return Location;\r\n}());\r\nexport { Location };\r\n//# sourceMappingURL=Location.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dataSanitizeString } from \"@microsoft/applicationinsights-common\";\r\nimport { generateW3CId, getLocation } from \"@microsoft/applicationinsights-core-js\";\r\nvar TelemetryTrace = /** @class */ (function () {\r\n    function TelemetryTrace(id, parentId, name, logger) {\r\n        var _self = this;\r\n        _self.traceID = id || generateW3CId();\r\n        _self.parentID = parentId;\r\n        _self.name = name;\r\n        var location = getLocation();\r\n        if (!name && location && location.pathname) {\r\n            _self.name = location.pathname;\r\n        }\r\n        _self.name = dataSanitizeString(logger, _self.name);\r\n    }\r\n    return TelemetryTrace;\r\n}());\r\nexport { TelemetryTrace };\r\n//# sourceMappingURL=TelemetryTrace.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n * TelemetryContext.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isString, objKeys, hasWindow, _InternalLogMessage, setValue, getSetValue } from \"@microsoft/applicationinsights-core-js\";\r\nimport { Session, _SessionManager } from \"./Context/Session\";\r\nimport { Extensions, CtxTagKeys, PageView } from \"@microsoft/applicationinsights-common\";\r\nimport { Application } from \"./Context/Application\";\r\nimport { Device } from \"./Context/Device\";\r\nimport { Internal } from \"./Context/Internal\";\r\nimport { User } from \"./Context/User\";\r\nimport { Location } from \"./Context/Location\";\r\nimport { TelemetryTrace } from \"./Context/TelemetryTrace\";\r\nvar strExt = \"ext\";\r\nvar strTags = \"tags\";\r\nfunction _removeEmpty(target, name) {\r\n    if (target && target[name] && objKeys(target[name]).length === 0) {\r\n        delete target[name];\r\n    }\r\n}\r\nvar TelemetryContext = /** @class */ (function () {\r\n    function TelemetryContext(core, defaultConfig) {\r\n        var _this = this;\r\n        var logger = core.logger;\r\n        this.appId = function () { return null; };\r\n        this.getSessionId = function () { return null; };\r\n        dynamicProto(TelemetryContext, this, function (_self) {\r\n            _self.application = new Application();\r\n            _self.internal = new Internal(defaultConfig);\r\n            if (hasWindow()) {\r\n                _self.sessionManager = new _SessionManager(defaultConfig, core);\r\n                _self.device = new Device();\r\n                _self.location = new Location();\r\n                _self.user = new User(defaultConfig, core);\r\n                _self.telemetryTrace = new TelemetryTrace(undefined, undefined, undefined, logger);\r\n                _self.session = new Session();\r\n            }\r\n            _self.getSessionId = function () {\r\n                var session = _self.session;\r\n                var sesId = null;\r\n                // If customer set session info, apply their context; otherwise apply context automatically generated\r\n                if (session && isString(session.id)) {\r\n                    sesId = session.id;\r\n                }\r\n                else {\r\n                    // Gets the automatic session if it exists or an empty object\r\n                    var autoSession = (_self.sessionManager || {}).automaticSession;\r\n                    sesId = autoSession && isString(autoSession.id) ? autoSession.id : null;\r\n                }\r\n                return sesId;\r\n            };\r\n            _self.applySessionContext = function (evt, itemCtx) {\r\n                setValue(getSetValue(evt.ext, Extensions.AppExt), \"sesId\", _self.getSessionId(), isString);\r\n            };\r\n            _self.applyOperatingSystemContxt = function (evt, itemCtx) {\r\n                setValue(evt.ext, Extensions.OSExt, _self.os);\r\n            };\r\n            _self.applyApplicationContext = function (evt, itemCtx) {\r\n                var application = _self.application;\r\n                if (application) {\r\n                    // evt.ext.app\r\n                    var tags = getSetValue(evt, strTags);\r\n                    setValue(tags, CtxTagKeys.applicationVersion, application.ver, isString);\r\n                    setValue(tags, CtxTagKeys.applicationBuild, application.build, isString);\r\n                }\r\n            };\r\n            _self.applyDeviceContext = function (evt, itemCtx) {\r\n                var device = _self.device;\r\n                if (device) {\r\n                    // evt.ext.device\r\n                    var extDevice = getSetValue(getSetValue(evt, strExt), Extensions.DeviceExt);\r\n                    setValue(extDevice, \"localId\", device.id, isString);\r\n                    setValue(extDevice, \"ip\", device.ip, isString);\r\n                    setValue(extDevice, \"model\", device.model, isString);\r\n                    setValue(extDevice, \"deviceClass\", device.deviceClass, isString);\r\n                }\r\n            };\r\n            _self.applyInternalContext = function (evt, itemCtx) {\r\n                var internal = _self.internal;\r\n                if (internal) {\r\n                    var tags = getSetValue(evt, strTags);\r\n                    setValue(tags, CtxTagKeys.internalAgentVersion, internal.agentVersion, isString); // not mapped in CS 4.0\r\n                    setValue(tags, CtxTagKeys.internalSdkVersion, internal.sdkVersion, isString);\r\n                    if (evt.baseType === _InternalLogMessage.dataType || evt.baseType === PageView.dataType) {\r\n                        setValue(tags, CtxTagKeys.internalSnippet, internal.snippetVer, isString);\r\n                        setValue(tags, CtxTagKeys.internalSdkSrc, internal.sdkSrc, isString);\r\n                    }\r\n                }\r\n            };\r\n            _self.applyLocationContext = function (evt, itemCtx) {\r\n                var location = _this.location;\r\n                if (location) {\r\n                    setValue(getSetValue(evt, strTags, []), CtxTagKeys.locationIp, location.ip, isString);\r\n                }\r\n            };\r\n            _self.applyOperationContext = function (evt, itemCtx) {\r\n                var telemetryTrace = _self.telemetryTrace;\r\n                if (telemetryTrace) {\r\n                    var extTrace = getSetValue(getSetValue(evt, strExt), Extensions.TraceExt, { traceID: undefined, parentID: undefined });\r\n                    setValue(extTrace, \"traceID\", telemetryTrace.traceID, isString);\r\n                    setValue(extTrace, \"name\", telemetryTrace.name, isString);\r\n                    setValue(extTrace, \"parentID\", telemetryTrace.parentID, isString);\r\n                }\r\n            };\r\n            _self.applyWebContext = function (evt, itemCtx) {\r\n                var web = _this.web;\r\n                if (web) {\r\n                    setValue(getSetValue(evt, strExt), Extensions.WebExt, web);\r\n                }\r\n            };\r\n            _self.applyUserContext = function (evt, itemCtx) {\r\n                var user = _self.user;\r\n                if (user) {\r\n                    var tags = getSetValue(evt, strTags, []);\r\n                    // stays in tags\r\n                    setValue(tags, CtxTagKeys.userAccountId, user.accountId, isString);\r\n                    // CS 4.0\r\n                    var extUser = getSetValue(getSetValue(evt, strExt), Extensions.UserExt);\r\n                    setValue(extUser, \"id\", user.id, isString);\r\n                    setValue(extUser, \"authId\", user.authenticatedId, isString);\r\n                }\r\n            };\r\n            _self.cleanUp = function (evt, itemCtx) {\r\n                var ext = evt.ext;\r\n                if (ext) {\r\n                    _removeEmpty(ext, Extensions.DeviceExt);\r\n                    _removeEmpty(ext, Extensions.UserExt);\r\n                    _removeEmpty(ext, Extensions.WebExt);\r\n                    _removeEmpty(ext, Extensions.OSExt);\r\n                    _removeEmpty(ext, Extensions.AppExt);\r\n                    _removeEmpty(ext, Extensions.TraceExt);\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for TelemetryContext.prototype.applySessionContext.\r\n// Removed Stub for TelemetryContext.prototype.applyOperatingSystemContxt.\r\n// Removed Stub for TelemetryContext.prototype.applyApplicationContext.\r\n// Removed Stub for TelemetryContext.prototype.applyDeviceContext.\r\n// Removed Stub for TelemetryContext.prototype.applyInternalContext.\r\n// Removed Stub for TelemetryContext.prototype.applyLocationContext.\r\n// Removed Stub for TelemetryContext.prototype.applyOperationContext.\r\n// Removed Stub for TelemetryContext.prototype.applyWebContext.\r\n// Removed Stub for TelemetryContext.prototype.applyUserContext.\r\n// Removed Stub for TelemetryContext.prototype.cleanUp.\r\n    return TelemetryContext;\r\n}());\r\nexport { TelemetryContext };\r\n//# sourceMappingURL=TelemetryContext.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BaseTelemetryPlugin, isNullOrUndefined, _InternalLogMessage, LoggingSeverity, _InternalMessageId, getNavigator, objForEachKey, getSetValue } from \"@microsoft/applicationinsights-core-js\";\r\nimport { TelemetryContext } from \"./TelemetryContext\";\r\nimport { PageView, BreezeChannelIdentifier, PropertiesPluginIdentifier, getExtensionByName } from \"@microsoft/applicationinsights-common\";\r\nvar PropertiesPlugin = /** @class */ (function (_super) {\r\n    __extends(PropertiesPlugin, _super);\r\n    function PropertiesPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 110;\r\n        _this.identifier = PropertiesPluginIdentifier;\r\n        var _breezeChannel; // optional. If exists, grab appId from it\r\n        var _extensionConfig;\r\n        dynamicProto(PropertiesPlugin, _this, function (_self, _base) {\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                _base.initialize(config, core, extensions, pluginChain);\r\n                var ctx = _self._getTelCtx();\r\n                var identifier = _self.identifier;\r\n                var defaultConfig = PropertiesPlugin.getDefaultConfig();\r\n                _extensionConfig = _extensionConfig || {};\r\n                objForEachKey(defaultConfig, function (field, value) {\r\n                    _extensionConfig[field] = function () { return ctx.getConfig(identifier, field, value()); };\r\n                });\r\n                _self.context = new TelemetryContext(core, _extensionConfig);\r\n                _breezeChannel = getExtensionByName(extensions, BreezeChannelIdentifier);\r\n                _self.context.appId = function () { return _breezeChannel ? _breezeChannel[\"_appId\"] : null; };\r\n                // Test hook to allow accessing the internal values -- explicitly not defined as an available property on the class\r\n                _self[\"_extConfig\"] = _extensionConfig;\r\n            };\r\n            /**\r\n             * Add Part A fields to the event\r\n             * @param event The event that needs to be processed\r\n             */\r\n            _self.processTelemetry = function (event, itemCtx) {\r\n                if (isNullOrUndefined(event)) {\r\n                    // TODO(barustum): throw an internal event once we have support for internal logging\r\n                }\r\n                else {\r\n                    itemCtx = _self._getTelCtx(itemCtx);\r\n                    // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n                    if (event.name === PageView.envelopeType) {\r\n                        itemCtx.diagLog().resetInternalMessageCount();\r\n                    }\r\n                    var theContext = (_self.context || {});\r\n                    if (theContext.session) {\r\n                        // If customer did not provide custom session id update the session manager\r\n                        if (typeof _self.context.session.id !== \"string\" && theContext.sessionManager) {\r\n                            theContext.sessionManager.update();\r\n                        }\r\n                    }\r\n                    var userCtx = theContext.user;\r\n                    if (userCtx && !userCtx.isUserCookieSet) {\r\n                        userCtx.update(theContext.user.id);\r\n                    }\r\n                    _processTelemetryInternal(event, itemCtx);\r\n                    if (userCtx && userCtx.isNewUser) {\r\n                        userCtx.isNewUser = false;\r\n                        var message = new _InternalLogMessage(_InternalMessageId.SendBrowserInfoOnUserInit, ((getNavigator() || {}).userAgent || \"\"));\r\n                        itemCtx.diagLog().logInternalMessage(LoggingSeverity.CRITICAL, message);\r\n                    }\r\n                    _self.processNext(event, itemCtx);\r\n                }\r\n            };\r\n            function _processTelemetryInternal(evt, itemCtx) {\r\n                // Set Part A fields\r\n                getSetValue(evt, \"tags\", []);\r\n                getSetValue(evt, \"ext\", {});\r\n                var ctx = _self.context;\r\n                ctx.applySessionContext(evt, itemCtx);\r\n                ctx.applyApplicationContext(evt, itemCtx);\r\n                ctx.applyDeviceContext(evt, itemCtx);\r\n                ctx.applyOperationContext(evt, itemCtx);\r\n                ctx.applyUserContext(evt, itemCtx);\r\n                ctx.applyOperatingSystemContxt(evt, itemCtx);\r\n                ctx.applyWebContext(evt, itemCtx);\r\n                ctx.applyLocationContext(evt, itemCtx); // legacy tags\r\n                ctx.applyInternalContext(evt, itemCtx); // legacy tags\r\n                ctx.cleanUp(evt, itemCtx);\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    PropertiesPlugin.getDefaultConfig = function () {\r\n        var defaultConfig = {\r\n            instrumentationKey: function () { return undefined; },\r\n            accountId: function () { return null; },\r\n            sessionRenewalMs: function () { return 30 * 60 * 1000; },\r\n            samplingPercentage: function () { return 100; },\r\n            sessionExpirationMs: function () { return 24 * 60 * 60 * 1000; },\r\n            cookieDomain: function () { return null; },\r\n            sdkExtension: function () { return null; },\r\n            isBrowserLinkTrackingEnabled: function () { return false; },\r\n            appId: function () { return null; },\r\n            getSessionId: function () { return null; },\r\n            namePrefix: function () { return undefined; },\r\n            sessionCookiePostfix: function () { return undefined; },\r\n            userCookiePostfix: function () { return undefined; },\r\n            idLength: function () { return 22; },\r\n            getNewId: function () { return null; }\r\n        };\r\n        return defaultConfig;\r\n    };\r\n// Removed Stub for PropertiesPlugin.prototype.initialize.\r\n// Removed Stub for PropertiesPlugin.prototype.processTelemetry.\r\n    return PropertiesPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport default PropertiesPlugin;\r\n//# sourceMappingURL=PropertiesPlugin.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.7.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n// Licensed under the\r\nexport { Util, CorrelationIdHelper, DateTimeUtils, dateTimeUtilsNow, dateTimeUtilsDuration, UrlHelper, isInternalApplicationInsightsEndpoint } from \"./Util\";\r\nexport { parseConnectionString, ConnectionStringParser } from \"./ConnectionStringParser\";\r\nexport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod, DEFAULT_BREEZE_ENDPOINT, strNotSpecified } from \"./Constants\";\r\nexport { Data as AIData } from \"./Interfaces/Contracts/Generated/Data\";\r\nexport { Base as AIBase } from \"./Interfaces/Contracts/Generated/Base\";\r\nexport { Envelope } from \"./Telemetry/Common/Envelope\";\r\nexport { Event } from \"./Telemetry/Event\";\r\nexport { Exception } from \"./Telemetry/Exception\";\r\nexport { Metric } from \"./Telemetry/Metric\";\r\nexport { PageView } from \"./Telemetry/PageView\";\r\nexport { PageViewData } from \"./Interfaces/Contracts/Generated/PageViewData\";\r\nexport { RemoteDependencyData } from \"./Telemetry/RemoteDependencyData\";\r\nexport { Trace } from \"./Telemetry/Trace\";\r\nexport { PageViewPerformance } from \"./Telemetry/PageViewPerformance\";\r\nexport { Data } from \"./Telemetry/Common/Data\";\r\nexport { SeverityLevel } from \"./Interfaces/Contracts/Generated/SeverityLevel\";\r\nexport { ConfigurationManager } from \"./Interfaces/IConfig\";\r\nexport { ContextTagKeys } from \"./Interfaces/Contracts/Generated/ContextTagKeys\";\r\nexport { DataSanitizer, dataSanitizeKeyAndAddUniqueness, dataSanitizeKey, dataSanitizeString, dataSanitizeUrl, dataSanitizeMessage, dataSanitizeException, dataSanitizeProperties, dataSanitizeMeasurements, dataSanitizeId, dataSanitizeInput, dsPadNumber } from \"./Telemetry/Common/DataSanitizer\";\r\nexport { TelemetryItemCreator } from \"./TelemetryItemCreator\";\r\nexport { CtxTagKeys, Extensions } from \"./Interfaces/PartAExtensions\";\r\nexport { DistributedTracingModes } from \"./Enums\";\r\nexport { stringToBoolOrDefault, msToTimeSpan, getExtensionByName, isCrossOriginError } from \"./HelperFuncs\";\r\nexport { isBeaconsSupported as isBeaconApiSupported } from \"@microsoft/applicationinsights-core-js\";\r\nexport { createDomEvent } from \"./DomHelperFuncs\";\r\nexport { utlDisableStorage, utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage, utlRemoveStorage, utlCanUseSessionStorage, utlGetSessionStorageKeys, utlGetSessionStorage, utlSetSessionStorage, utlRemoveSessionStorage } from \"./StorageHelperFuncs\";\r\nexport { urlParseUrl, urlGetAbsoluteUrl, urlGetPathName, urlGetCompleteUrl, urlParseHost, urlParseFullHost } from \"./UrlHelperFuncs\";\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\nexport var AnalyticsPluginIdentifier = \"ApplicationInsightsAnalytics\";\r\n//# sourceMappingURL=applicationinsights-common.js.map"],"names":["strShimFunction","strShimObject","strShimUndefined","strShimPrototype","strShimHasOwnProperty","ObjClass","Object","ObjProto","ObjCreate","ObjDefineProperty","ObjHasOwnProperty","getGlobal","globalThis","self","window","global","throwTypeError","message","TypeError","extendStaticsFn","d","b","__proto__","Array","p","__extendsFn","__","this","constructor","obj","type","tmpFunc","objCreateFn","LoggingSeverity","Constructor","Prototype","strFunction","DynInstFuncTable","DynProxyTag","DynClassName","DynInstChkTag","DynAllowInstChkTag","DynProtoDefaultOptions","UnknownValue","str__Proto","strUseBaseInst","strSetInstFuncs","Obj","_objGetPrototypeOf","_dynamicNames","_hasOwnProperty","prop","hasOwnProperty","call","_isObjectOrArrayPrototype","target","_isObjectArrayOrFunctionPrototype","Function","_getObjProto","newProto","_forEachProp","func","props","getOwnProps","name_1","push","length","lp","_isDynamicCandidate","funcName","skipOwn","_throwTypeError","_hasVisited","values","value","_getObjName","unknownValue","name","dynamicProto","theClass","delegateFunc","options","classProto","visited","thisProto","_checkPrototype","className","perfOptions","useBaseInst","undefined","thisTarget","instFuncs","_instFuncProxy","funcHost","instFuncTable","theFunc","apply","arguments","baseFuncs","baseProto","_getBaseFuncs","proto","baseInstFuncs","instFuncs_1","setInstanceFunc","dynProtoProxy","protoFunc","currentDynProtoProxy","instFunc","canAddInst","objProto","e","_getInstFunc","setInstFuncs","_InternalMessageId","BrowserDoesNotSupportLocalStorage","BrowserCannotReadLocalStorage","BrowserCannotReadSessionStorage","BrowserCannotWriteLocalStorage","BrowserCannotWriteSessionStorage","BrowserFailedRemovalFromLocalStorage","BrowserFailedRemovalFromSessionStorage","CannotSendEmptyTelemetry","ClientPerformanceMathError","ErrorParsingAISessionCookie","ErrorPVCalc","ExceptionWhileLoggingError","FailedAddingTelemetryToBuffer","FailedMonitorAjaxAbort","FailedMonitorAjaxDur","FailedMonitorAjaxOpen","FailedMonitorAjaxRSC","FailedMonitorAjaxSend","FailedMonitorAjaxGetCorrelationHeader","FailedToAddHandlerForOnBeforeUnload","FailedToSendQueuedTelemetry","FailedToReportDataLoss","FlushFailed","MessageLimitPerPVExceeded","MissingRequiredFieldSpecification","NavigationTimingNotSupported","OnError","SessionRenewalDateIsZero","SenderNotInitialized","StartTrackEventFailed","StopTrackEventFailed","StartTrackFailed","StopTrackFailed","TelemetrySampledAndNotSent","TrackEventFailed","TrackExceptionFailed","TrackMetricFailed","TrackPVFailed","TrackPVFailedCalc","TrackTraceFailed","TransmissionFailed","FailedToSetStorageBuffer","FailedToRestoreStorageBuffer","InvalidBackendResponse","FailedToFixDepricatedValues","InvalidDurationValue","TelemetryEnvelopeInvalid","CreateEnvelopeError","CannotSerializeObject","CannotSerializeObjectNonSerializable","CircularReferenceDetected","ClearAuthContextFailed","ExceptionTruncated","IllegalCharsInName","ItemNotInArray","MaxAjaxPerPVExceeded","MessageTruncated","NameTooLong","SampleRateOutOfRange","SetAuthContextFailed","SetAuthContextFailedAccountName","StringValueTooLong","StartCalledMoreThanOnce","StopCalledWithoutStart","TelemetryInitializerFailed","TrackArgumentsNotSpecified","UrlTooLong","SessionStorageBufferFull","CannotAccessCookie","IdTooLong","InvalidEvent","FailedMonitorAjaxSetRequestHeader","SendBrowserInfoOnUserInit","PluginException","NotificationException","SnippetScriptLoadFailure","InvalidInstrumentationKey","CannotParseAiBlobValue","InvalidContentBlob","TrackPageActionEventFailed","FailedAddingCustomDefinedRequestContext","InMemoryStorageBufferFull","_objDefineProperty","objToString","toString","isUndefined","isNullOrUndefined","isNotNullOrUndefined","isFunction","objForEachKey","callbackfn","strContains","search","indexOf","isString","arrForEach","arr","thisArg","len","idx","strTrim","str","replace","_objKeysHasDontEnumBug","propertyIsEnumerable","_objKeysDontEnums","dateNow","dt","Date","now","getTime","getExceptionName","object","setValue","field","valChk","srcChk","theValue","getSetValue","defValue","isTruthy","strWindow","strNavigator","strLocation","strJSON","strMsie","strTrident","_isTrident","_navUserAgentCheck","_enableMocks","getGlobalInst","gbl","hasWindow","getNavigator","navigator","getLocation","checkForMock","mockLocation","location","hasJSON","JSON","getJSON","isIE","nav","userAgent","toLowerCase","dumpObj","objectTypeDump","propertyValueDump","stack","stringify","_aiNamespace","_sanitizeDiagnosticText","text","_logToConsole","logFunc","theConsole","console","_InternalLogMessage","dataType","msgId","msg","isUserAct","properties","messageId","strProps","diagnosticText","safeGetLogger","core","config","logger","DiagnosticLogger","identifier","queue","_messageCount","_messageLogged","_self","_getConfigValue","_debugExtMsg","data","dbgExt","ns","disableDbgExt","diagLog","consoleLoggingLevel","telemetryLoggingLevel","maxInternalMessageLimit","enableDebugExceptions","throwInternal","severity","CRITICAL","logLevel","messageKey","logInternalMessage","warnToConsole","errorToConsole","resetInternalMessageCount","throttleLimitMessage","logMessage","throttleMessage","PerfEvent","ParentContextKey","ChildrenContextKey","payloadDetails","isAsync","theDetails_1","accessorDefined","start","isChildEvt","descriptor","enumerable","configurable","get","objDefineAccessors","getCtx","key","setCtx","complete","childTime","childEvts","childEvt","time","exTime","payload","doPerfActiveKey","doPerf","mgrSource","getSource","details","perfMgr","children","perfEvt","currentActive","create","ex","fire","TelemetryPluginChain","plugin","defItemCtx","_nextProxy","_hasProcessTelemetry","processTelemetry","_hasSetNext","setNextPlugin","_hasRun","getPlugin","getNext","setNext","nextPlugin","env","itemCtx","error","hasRun","item","_createProxyChain","plugins","proxies","lastProxy","thePlugin","newProxy","ProcessTelemetryContext","startAt","add","proxy","_copyProxyChain","getCfg","getExtCfg","defaultValue","theConfig","extConfig","extensionConfig","getConfig","hasNext","processNext","createNew","strGetPlugin","BaseTelemetryPlugin","prototype","initialize","extensions","pluginChain","_baseTelInit","_isinitialized","_rootCtx","_nextPlugin","_getTelCtx","isInitialized","setInitialized","next","currentCtx","rootCtx","getProcessTelContext","strToGMTString","strToUTCString","strCookie","strExpires","strEnabled","strIsCookieUseDisabled","strDisableCookiesUsage","strConfigCookieMgr","strEmpty","_supportsCookies","_allowUaSameSite","_parsedCookieValue","_doc","document","_cookieCache","_globalCookieConfig","_isMgrEnabled","cookieMgr","isEnabled","safeGetCookieMgr","getCookieMgr","cookieCfg","createCookieMgr","inst","rootConfig","cookieMgrCfg","cookieMgrConfig","cookieDomain","cookiePath","cookieEnabled","_path","path","_domain","domain","_enabled","enabled","areCookiesSupported","gblManager","setEnabled","set","maxAgeSec","_isIE","result","substring","_extractParts","expireMs","expiry","setTime","_formatDate","location_1","protocol","valLen","pos","searchLen","strEndsWith","setCookie","_setCookieValue","_formatCookieValue","getCookie","theCookie","cookieValue","del","purge","_a","delCookie","WARNING","exception","split","thePart","theDate","StorageType","UInt32Mask","MaxUInt32","_mwcSeeded","_mwcW","_mwcZ","random32","signed","c","getRandomValues","Uint32Array","seedValue","Math","random","_autoSeedMwc","floor","newId","maxLength","number","chars","base64chars","dataSanitizeKeyAndAddUniqueness","map","s","nameTrunc","origLength","i","uniqueField","substr","dataSanitizeString","valueTrunc","dataSanitizeProperties","tempProps_1","dataSanitizeInput","input","_msgId","inputTrunc","_canUseLocalStorage","_getLocalStorageObject","utlCanUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","uid","storage","setItem","fail","getItem","removeItem","utlGetLocalStorage","utlSetLocalStorage","utlRemoveStorage","_super","PageViewData","__extends","ver","measurements","_this","PageView","envelopeType","url","durationMs","id","hour","tempMeasurements_1","aiDataContract","duration","isNaN","sec","totalms","round","ms","min","days","measure","_aiNameFunc","baseName","aiName","defaults","_aiApplication","_aiDevice","_aiLocation","_aiOperation","_aiSession","_aiUser","_aiCloud","_aiInternal","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","internalSnippet","internalSdkSrc","_this_1","Extensions","CtxTagKeys","Session","_SessionManager","acquisitionSpan","renewalSpan","cookieUpdateInterval","_storageNamePrefix","_cookieUpdatedTimestamp","_logger","_cookieManager","sessionExpirationMs","sessionRenewalMs","sessionCookiePostfix","namePrefix","_initializeAutomaticSessionWithData","session","sessionData","isValid","sessionReset","tokens","acqMs","renewalMs","acquisitionDate","renewalDate","_setCookie","nowMs","acq","renewalPeriodMs","acqTimeLeftMs","cookie","join","automaticSession","update","isExpired","storageValue","timeSinceAcqMs","timeSinceRenewalMs","getNewId","idLength","backup","guid","renewal","Application","Device","deviceClass","Internal","sdkVersion","sdkExtension","_validateUserInput","match","User","cookieSeparator","userCookieName","authUserCookieName","isNewUser","isUserCookieSet","userCookiePostfix","_generateNewId","_generateNewCookie","acqStr","date","pad","num","r","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","toISOString","accountAcquisitionDate","_setUserCookie","params","accountId","authCookie","authCookieString","decodeURI","authenticatedId","setAuthenticatedUserContext","authenticatedUserId","storeInCookie","encodeURI","clearAuthenticatedUserContext","Location","TelemetryTrace","parentId","traceID","tmp","hexValues","oct","a","clockSequenceHi","generateW3CId","parentID","pathname","strExt","strTags","_removeEmpty","objType","dontEnumsLength","objKeys","TelemetryContext","defaultConfig","appId","getSessionId","application","internal","sessionManager","device","user","telemetryTrace","autoSession","applySessionContext","evt","ext","applyOperatingSystemContxt","os","applyApplicationContext","tags","build","applyDeviceContext","extDevice","ip","model","applyInternalContext","agentVersion","baseType","snippetVer","sdkSrc","applyLocationContext","applyOperationContext","extTrace","applyWebContext","web","applyUserContext","extUser","cleanUp","PropertiesPlugin","getDefaultConfig","instrumentationKey","samplingPercentage","isBrowserLinkTrackingEnabled","_breezeChannel","_extensionConfig","priority","_base","extension","ctx","context","event","theContext","userCtx","_processTelemetryInternal"],"mappings":"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"}